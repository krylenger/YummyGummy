{"version":3,"sources":["data/dataStore.js","utils.js","framework/hooks.js","framework/element.js","framework/context.js","framework/render.js","framework/index.js","data/spoonacularAPI.js","context.js","components/GoalSwitch/GoalSwitch.js","components/GoalSwitch/index.js","components/SetGoal/SetGoal.js","components/SetGoal/index.js","components/ModalRecipe/ModalRecipe.js","components/RecipeCard/RecipeCard.js","components/RecipeCard/index.js","components/ModalRecipe/index.js","components/DailyMealPlan/DailyMealPlan.js","framework/customHooks.js","components/GetMealPlanByGoal/GetMealPlanByGoal.js","components/GetMealPlanByGoal/index.js","components/AddFridgeIngredients/AddFridgeIngredients.js","components/AddFridgeIngredients/index.js","components/FridgeItem/FridgeItem.js","components/FridgeIngredients/FridgeIngredients.js","components/FillFridge/FillFridge.js","components/FillFridge/index.js","components/FridgeRecipes/FridgeRecipes.js","components/FridgeRecipes/index.js","components/GetRecipeByIngredients/GetRecipeByIngredients.js","components/GetRecipeByIngredients/index.js","components/InputRecipeName/InputRecipeName.js","components/InputRecipeName/index.js","components/SearchedRecipes/SearchedRecipes.js","components/SearchedRecipes/index.js","components/SearchForRecipesByName/SearchForRecipesByName.js","components/SearchForRecipesByName/index.js","components/App/App.js","components/App/index.js","index.js"],"names":["dataStore","currentGoal","usersWeight","magicFridgeItems","searchedRecipe","recipesInCache","detailedMealPlanRecipes","detailedMagicFridgeRecipes","detailedSearchedRecipes","isMagicFridge","isDataLoading","error","errorInTheFridge","dailyMealPlan","isModalRecipeOpened","modalRecipeData","getNutrientAmount","nutrientName","arrayOfAllNutrients","searchedNutrient","find","nutrient","name","amount","calculateMaxCalories","caloriesAmount","parseInt","isCurrentRecipeInCache","window","Boolean","isFunction","func","current","shouldReRender","wipComponent","hookIndex","createFunctionElement","tag","props","children","hooks","useState","initial","oldHook","hook","state","queue","forEach","action","push","useEffect","effect","deps","oldDeps","undefined","hasChanged","hasDepsChanged","unmount","removeEventListener","addEventListener","prevDeps","nextDeps","length","some","dep","index","useContext","Context","value","createElement","element","DocumentFragment","document","Object","entries","startsWith","toLowerCase","substr","includes","removeAttribute","setAttribute","e","console","child","appendChild","parent","Array","isArray","subChild","nodeType","createTextNode","toString","createFragment","createContext","defaultValue","context","Provider","Consumer","hasWarnedAboutUsingUseContext","is","renderFunction","warn","render","timer","Component","target","requestAnimationFrame","workLoop","replaceChildren","cancelAnimationFrame","getSearchRecipeUrl","searchedWord","getUrlOfDetailedRecipe","id","getRapidAPIFetchOptionsData","method","headers","getDailyMealPlan","loadDailyMealPlan","then","meals","nutrients","loadDetailedRecipesInfo","results","maxCalories","fetch","response","ok","json","Error","status","data","catch","err","finally","renderApp","loadMagicFridgeRecipes","ingredientsArray","ingredientsQueryString","reduce","final","concat","whereToLoad","requests","map","result","url","Promise","all","responses","r","validateAndLoadData","resolve","performSearchRecipes","recipeName","AppContext","useAppContext","GoalSwitch","setCurrentGoal","goal","event","SetGoal","setUsersWeight","setIsSubmitClicked","getMealPlanByGoalHeader","getMealPlanByGoalHeader_h2","getMealPlanByGoalHeader_p","getModalRecipeData","targetId","detailedRecipes","openModalRecipe","setIsModalRecipeOpened","setModalRecipeData","closeModalRecipe","getPreparedModalRecipeData","image","instructions","nutrition","readyInMinutes","title","fatAmount","carbohydratesAmount","proteinAmount","CreateModalRecipeWindow","modalRecipeContainer","modalRecipeContainerInner","modalRecipeContainer_image","modalRecipeContainer_nutrientsContainer","recipeCard_nutrientInfoLine","modalRecipeContainer_instructions","ModalRecipe","content","getPreparedRecipeCardData","RecipeCard","recipeCard","recipeCard_image","findTargetCardAndOpenModal","card","closest","DailyMealPlan","contentDescription","calories","protein","fat","carbohydrates","detailedRecipeCardData","preparedRecipeCardData","recipesContainer","mealDescription","recipeCardsContainer","getShortRecipesData","isSubmitClicked","isShortRecipesInfoLoaded","setIsShortRecipesInfoLoaded","shortRecipesData","setShortRecipesData","setDailyMealPlan","setError","getShortRecipesFridgeData","isMagicButtonClicked","setIsMagicButtonClicked","setMagicFridgeItems","setErrorInTheFridge","setIsMagicFridge","setErr","getShortRecipesSearchData","setSearchedRecipe","promise","getDetailedRecipesData","setDetailedRecipes","GetMealPlanByGoal","getMealPlanByGoal","FillFridgeOnChange","alert","AddFridgeIngredients","styles","getRecipeByIngredientsHeader_p","FridgeItem","fridgeItemData","fridgeItemContainer","fridgeItemContainer_button","fridgeItemContainer_label","removeFridgeItem","item","filter","FridgeIngredients","magicButton","fridgeIngredientsListContainer_magicButton","fridgeIngredientsListContainer","fridgeIngredientsListContainer_inner","FillFridge","getRecipeByIngredientsHeader","findElementAndOpenModal","FridgeRecipes","GetRecipeByIngredients","getRecipeByIngredientsContainer","InputRecipeName","searchForRecipeByNameContainer_header","code","SearchedRecipes","SearchForRecipesByName","searchForRecipeByNameContainer","App","appContainer","header","module","hot","accept","getElementById"],"mappings":"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","file":"src.f6ee8679.js","sourceRoot":"../src","sourcesContent":["const dataStore = {\n  currentGoal: 'gain',\n  usersWeight: '42',\n  magicFridgeItems: [],\n  searchedRecipe: '',\n  recipesInCache: [],\n  detailedMealPlanRecipes: [],\n  detailedMagicFridgeRecipes: [],\n  detailedSearchedRecipes: [],\n  isMagicFridge: false,\n  isDataLoading: false,\n  error: null,\n  errorInTheFridge: null,\n  dailyMealPlan: '',\n  isModalRecipeOpened: false,\n  modalRecipeData: '',\n};\n\nexport default dataStore;\n","export function getNutrientAmount(nutrientName, arrayOfAllNutrients) {\n  let searchedNutrient = arrayOfAllNutrients.find(nutrient => nutrient.name === nutrientName);\n  return searchedNutrient.amount;\n}\n\nexport function calculateMaxCalories(currentGoal, usersWeight) {\n  usersWeight = parseInt(usersWeight);\n  let caloriesAmount;\n\n  if (currentGoal === 'lose') {\n    if (usersWeight <= 50) {\n      caloriesAmount = usersWeight * 10 + 1200 - 200;\n    } else if (usersWeight > 50 && usersWeight <= 80) {\n      caloriesAmount = usersWeight * 10 + 1400 - 200;\n    } else if (usersWeight > 80 && usersWeight <= 110) {\n      caloriesAmount = usersWeight * 10 + 1600 - 200;\n    } else {\n      caloriesAmount = usersWeight * 10 + 1800 - 200;\n    }\n  } else {\n    if (usersWeight <= 50) {\n      caloriesAmount = usersWeight * 10 + 1200;\n    } else if (usersWeight > 50 && usersWeight <= 80) {\n      caloriesAmount = usersWeight * 10 + 1400;\n    } else if (usersWeight > 80 && usersWeight <= 110) {\n      caloriesAmount = usersWeight * 10 + 1600;\n    } else {\n      caloriesAmount = usersWeight * 10 + 1800;\n    }\n  }\n  return caloriesAmount;\n}\n\nexport function isCurrentRecipeInCache() {\n  const { recipesInCache, searchedRecipe } = window.dataStore;\n  return Boolean(recipesInCache[searchedRecipe]);\n}\n\nexport const isFunction = func => typeof func === 'function';\n","import { isFunction } from '../utils';\n\nexport const current = {\n  shouldReRender: true,\n  wipComponent: null,\n  hookIndex: null,\n};\n\nexport function createFunctionElement(tag, props, children) {\n  current.wipComponent = tag;\n  current.hookIndex = 0;\n  current.wipComponent.hooks = current.wipComponent.hooks || [];\n\n  return tag({ ...props, children }, children);\n}\n\nexport function useState(initial) {\n  const { wipComponent, hookIndex } = current;\n  const oldHook = wipComponent.hooks[hookIndex];\n  const hook = {\n    state: oldHook ? oldHook.state : initial,\n    queue: [],\n  };\n\n  const actions = oldHook ? oldHook.queue : [];\n\n  actions.forEach(action => {\n    hook.state = isFunction(action) ? action(hook.state) : action;\n  });\n\n  const setState = action => {\n    current.shouldReRender = true;\n    hook.queue.push(action);\n  };\n\n  wipComponent.hooks[hookIndex] = hook;\n  current.hookIndex++;\n  return [hook.state, setState];\n}\n\nexport function useEffect(effect, deps) {\n  const { wipComponent, hookIndex } = current;\n  const oldHook = wipComponent.hooks[hookIndex];\n  const oldDeps = oldHook ? oldHook.deps : undefined;\n\n  const hasChanged = hasDepsChanged(oldDeps, deps);\n\n  current.hookIndex++;\n\n  if (!hasChanged) return;\n\n  if (oldHook && oldHook.unmount) {\n    window.removeEventListener('beforeunload', oldHook.unmount);\n  }\n\n  wipComponent.hooks[hookIndex] = {\n    unmount: effect(),\n    deps,\n  };\n\n  window.addEventListener('beforeunload', wipComponent.hooks[hookIndex].unmount);\n}\n\nconst hasDepsChanged = (prevDeps, nextDeps) =>\n  !prevDeps ||\n  !nextDeps ||\n  prevDeps.length !== nextDeps.length ||\n  prevDeps.some((dep, index) => dep !== nextDeps[index]);\n\nexport const useContext = Context => Context.value;\n","/**\n * Creates DOM Node. Implements jsx-parser's createElement API\n * @param {string|Function} tag - HTML tag as string or Component function\n * @param {object} props - element properties as parsed by jsx-parser\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment|Element}\n */\nimport { createFunctionElement } from './hooks';\nimport { isFunction } from '../utils';\n\nexport const createElement = (tag, props, ...children) => {\n  if (isFunction(tag)) {\n    /*\n       Passing children as the 2nd argument is required as jsx transformer puts component functions\n       and regular tags in wrapper functions that expect children as the 2nd param\n      */\n    return createFunctionElement(tag, props, children);\n  }\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\n  Object.entries(props || {}).forEach(([name, value]) => {\n    if (name.startsWith('on') && name.toLowerCase() in window) {\n      element.addEventListener(\n        name.toLowerCase().substr(2),\n        /** @type {Function} */\n        value,\n      );\n    } else {\n      try {\n        if (!(element instanceof DocumentFragment)) {\n          // Boolean attributes are considered to be true if they're present on the element at all, regardless of their actual value\n          // https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#example\n          if (['disabled', 'checked'].includes(name) && !value) {\n            element.removeAttribute(name);\n          } else {\n            element.setAttribute(name, value);\n          }\n        }\n      } catch (e) {\n        console.error('createElement caught', e, 'on', element);\n      }\n    }\n  });\n\n  children.forEach(child => appendChild(element, child));\n\n  return element;\n};\n\n/**\n * Appends child elements from an unbound array of children, recursively\n * @param {Node} parent\n * @param {Node|[Node]} child\n */\nconst appendChild = (parent, child) => {\n  if (Array.isArray(child)) {\n    child.forEach(subChild => appendChild(parent, subChild));\n  } else {\n    // Skip null and undefined\n    if (child != null) {\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\n    }\n  }\n};\n\n/**\n * Creates Fragment. Implements jsx-parser's createFragment API\n * @param {object} props - effectively a placeholder, fragment never has any properties\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment}\n */\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\n","import { current } from '../framework';\nimport { isFunction } from '../utils';\n\n/**\n * @typedef {Object} Context\n * @property {*} Provider - Provider\n * @property {*} Consumer - Consumer\n */\n\n/**\n * Creates Context object with Provider and Consumer\n * @param {*} defaultValue - defaultValue of created context\n * @returns {Context} context object\n */\nexport function createContext(defaultValue) {\n  const context = {\n    value: defaultValue,\n    Provider: null,\n    Consumer: null,\n  };\n\n  let hasWarnedAboutUsingUseContext = false;\n\n  context.Provider = function ({ value = defaultValue, children }) {\n    if (!Object.is(context.value, value)) {\n      current.shouldReRender = true;\n      context.value = value;\n    }\n    return children;\n  };\n\n  context.Consumer = function ({ children }) {\n    const [renderFunction] = children;\n    if (!isFunction(renderFunction)) {\n      !hasWarnedAboutUsingUseContext &&\n        console.warn(\n          'Requires a function as a child.',\n          '\\n',\n          'The function receives the current context value and returns a node.',\n          '\\n',\n          'Or use useContext(Context) inside your component.',\n        );\n      hasWarnedAboutUsingUseContext = true;\n      return children;\n    }\n    return renderFunction(context.value);\n  };\n\n  return context;\n}\n","/** @jsx createElement */\n/*** @jsxFrag createFragment */\nimport { createElement } from './element';\nimport { current } from './hooks';\n\n/**\n * Renders a component and attaches it to the target DOM element\n * @param Component - function\n * @param target - DOM element to attach component to\n */\n\nlet timer;\n\nexport function render(Component, target) {\n  function workLoop() {\n    if (current.shouldReRender) {\n      current.shouldReRender = false;\n      target.replaceChildren(<Component />);\n    }\n\n    cancelAnimationFrame(timer);\n    timer = requestAnimationFrame(workLoop);\n  }\n  timer = requestAnimationFrame(workLoop);\n}\n\nexport default render;\n","export * from './element';\nexport * from './context';\nexport * from './hooks';\nexport * from './render';\n","import { calculateMaxCalories, isCurrentRecipeInCache } from '../utils';\nimport renderApp from '../framework/render';\n\nexport function getSearchRecipeUrl(searchedWord) {\n  return `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/search?query=${searchedWord}&number=5`;\n}\n\nexport function getUrlOfDetailedRecipe(id) {\n  return `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/${id}/information?includeNutrition=true`;\n}\n\nexport function getRapidAPIFetchOptionsData() {\n  return {\n    method: 'GET',\n    headers: {\n      'x-rapidapi-key': `${process.env.rapidApiKey}`,\n      'x-rapidapi-host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',\n    },\n  };\n}\n\nexport function getDailyMealPlan() {\n  let promise = loadDailyMealPlan();\n  promise.then(({ meals, nutrients }) => {\n    loadDetailedRecipesInfo({ results: meals }, 'detailedMealPlanRecipes');\n  });\n}\n\nexport function loadDailyMealPlan() {\n  const { currentGoal, usersWeight } = window.dataStore;\n  const maxCalories = calculateMaxCalories(currentGoal, usersWeight);\n\n  return fetch(\n    `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/mealplans/generate?timeFrame=day&targetCalories=${maxCalories}`,\n    getRapidAPIFetchOptionsData(),\n  )\n    .then(response => {\n      if (response.ok) return response.json();\n      throw new Error(`Error` + response.status + response.json);\n    })\n    .then(data => {\n      window.dataStore.dailyMealPlan = data;\n      return data;\n    })\n    .catch(err => {\n      window.dataStore.err = err;\n    })\n    .finally(renderApp);\n}\n\nexport function loadMagicFridgeRecipes() {\n  const ingredientsArray = window.dataStore.magicFridgeItems;\n  let ingredientsQueryString = ingredientsArray.reduce(\n    (final, current) => final.concat(current + '%2C'),\n    '',\n  );\n  return fetch(\n    `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/findByIngredients?ingredients=${ingredientsQueryString}&number=4&ignorePantry=false&ranking=1`,\n    getRapidAPIFetchOptionsData(),\n  )\n    .then(response => {\n      if (response.ok) return response.json();\n      throw new Error(`Error` + response.status + response.json);\n    })\n    .then(data => {\n      if (!data.length) {\n        window.dataStore.errorInTheFridge = true;\n        return data;\n      } else {\n        window.dataStore.errorInTheFridge = false;\n        window.dataStore.isMagicFridge = true;\n        return data;\n      }\n    })\n    .catch(err => {\n      window.dataStore.err = err;\n    })\n    .finally(renderApp);\n}\n\nexport function loadDetailedRecipesInfo({ results }, whereToLoad) {\n  const urlsOfDetailedRecipes = results.map(result => getUrlOfDetailedRecipe(result.id));\n  let requests = urlsOfDetailedRecipes.map(url => fetch(url, getRapidAPIFetchOptionsData()));\n  return Promise.all(requests)\n    .then(responses => Promise.all(responses.map(r => r.json())))\n    .then(data => {\n      if (!data.length) {\n        throw new Error('Please enter valid ingredient.');\n      }\n      window.dataStore[whereToLoad] = data;\n    })\n    .catch(error => {\n      window.dataStore.error = 'Error inside loadDetailedRecipesInfo';\n    })\n    .finally(renderApp);\n}\n\nexport function validateAndLoadData() {\n  const { searchedRecipe } = window.dataStore;\n  const url = getSearchRecipeUrl(searchedRecipe);\n\n  if (!isCurrentRecipeInCache()) {\n    return fetch(url, getRapidAPIFetchOptionsData())\n      .then(response => {\n        if (response.ok) return response.json();\n        throw new Error(`Error` + response.status + response.json);\n      })\n      .then(data => ({ data }));\n  }\n  return Promise.resolve({});\n}\n\nexport function performSearchRecipes(recipeName) {\n  window.dataStore.searchedRecipe = recipeName;\n  window.dataStore.error = null;\n  window.dataStore.isDataLoading = true;\n  renderApp();\n  validateAndLoadData()\n    .then(({ error, data }) => {\n      window.dataStore.isDataLoading = false;\n      if (error) {\n        window.dataStore.error = error;\n      } else if (data) {\n        if (!data.results.length) {\n          throw new Error('wrong input');\n        }\n        window.dataStore.recipesInCache[recipeName] = data;\n        loadDetailedRecipesInfo(data, 'detailedSearchedRecipes');\n      } else {\n        loadDetailedRecipesInfo(\n          window.dataStore.recipesInCache[recipeName],\n          'detailedSearchedRecipes',\n        );\n      }\n    })\n    .catch(err => {\n      window.dataStore.error = `Ooops.. ${err}`;\n    })\n    .finally(renderApp);\n}\n","import { createContext, useContext } from './framework';\n\nexport const AppContext = createContext({});\nexport const useAppContext = () => useContext(AppContext);\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { useAppContext } from '../../context';\nexport default function GoalSwitch({ setCurrentGoal }) {\n  const currentGoal = useAppContext();\n  return (\n    <>\n      {[\n        { id: 'goalGain', goal: 'gain' },\n        { id: 'goalLose', goal: 'lose' },\n      ].map(({ goal, id }) => (\n        <>\n          <input\n            id={id}\n            type=\"radio\"\n            value={goal}\n            checked={currentGoal === goal}\n            onChange={event => setCurrentGoal(event.target.value)}\n          />\n          <label For={id}>{goal}</label>\n        </>\n      ))}\n    </>\n  );\n}\n","export { default } from './GoalSwitch';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { getDailyMealPlan } from '../../data/spoonacularAPI';\nimport renderApp from '../../framework/render';\nimport {\n  getMealPlanByGoalHeader,\n  getMealPlanByGoalHeader_h2,\n  getMealPlanByGoalHeader_p,\n} from './SetGoal.css';\nimport GoalSwitch from '../GoalSwitch';\nimport { useEffect } from '../../framework';\n\n// function handleWeightChange({ target }) {\n//   window.dataStore.usersWeight = target.value;\n//   renderApp();\n// }\n\nexport default function SetGoal({\n  // currentGoal,\n  setCurrentGoal,\n  usersWeight,\n  setUsersWeight,\n  setIsSubmitClicked,\n}) {\n  return (\n    <div class={getMealPlanByGoalHeader}>\n      <h2 class={getMealPlanByGoalHeader_h2}>Do you want to lose or to gain weight?</h2>\n      <GoalSwitch setCurrentGoal={setCurrentGoal} />\n      <p class={getMealPlanByGoalHeader_p}>\n        In case you want to lose weight, we're going to create a meal plan with a decreased amount\n        of carbs.\n      </p>\n      <p class={getMealPlanByGoalHeader_p}>\n        If your goal is to gain muscles - we're going to include more high protein dishes.\n      </p>\n      <h4>What's your weight?</h4>\n      <input\n        type=\"number\"\n        value={usersWeight}\n        placeholder=\"your weight\"\n        onChange={e => setUsersWeight(e.target.value)}\n      />\n      <button onClick={() => setIsSubmitClicked(true)}>Submit</button>\n    </div>\n  );\n}\n","export { default } from './SetGoal';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport renderApp from '../../framework/render';\nimport {\n  modalRecipeContainer,\n  modalRecipeContainerInner,\n  modalRecipeContainer_image,\n  modalRecipeContainer_nutrientsContainer,\n  recipeCard_nutrientInfoLine,\n  modalRecipeContainer_instructions,\n} from './ModalRecipe.css';\nimport { getNutrientAmount } from '../../utils';\n\nexport function getModalRecipeData(targetId, detailedRecipes) {\n  return detailedRecipes.find(({ id }) => id == targetId);\n}\n\nexport function openModalRecipe(\n  targetId,\n  setIsModalRecipeOpened,\n  setModalRecipeData,\n  detailedRecipes,\n) {\n  const modalRecipeData = getModalRecipeData(targetId, detailedRecipes);\n  setModalRecipeData(modalRecipeData);\n  setIsModalRecipeOpened(true);\n}\n\nexport function closeModalRecipe() {\n  window.dataStore.isModalRecipeOpened = false;\n  renderApp();\n}\n\nexport function getPreparedModalRecipeData({\n  id,\n  image,\n  instructions,\n  nutrition: { nutrients },\n  readyInMinutes,\n  title,\n}) {\n  const caloriesAmount = getNutrientAmount('Calories', nutrients);\n  const fatAmount = getNutrientAmount('Fat', nutrients);\n  const carbohydratesAmount = getNutrientAmount('Carbohydrates', nutrients);\n  const proteinAmount = getNutrientAmount('Protein', nutrients);\n  return {\n    id,\n    image,\n    instructions,\n    readyInMinutes,\n    title,\n    caloriesAmount,\n    fatAmount,\n    carbohydratesAmount,\n    proteinAmount,\n  };\n}\n\nexport function CreateModalRecipeWindow(\n  {\n    id,\n    image,\n    instructions,\n    readyInMinutes,\n    title,\n    caloriesAmount,\n    fatAmount,\n    carbohydratesAmount,\n    proteinAmount,\n  },\n  setIsModalRecipeOpened,\n) {\n  return (\n    <div class={modalRecipeContainer}>\n      <div class={modalRecipeContainerInner}>\n        <h1>{title}</h1>\n        <div class={modalRecipeContainer_image}>\n          <img src={image} alt={title} />\n        </div>\n        <div class={modalRecipeContainer_nutrientsContainer}>\n          <div class={recipeCard_nutrientInfoLine}>\n            <p>Calories:</p>\n            <p>{caloriesAmount}</p>\n          </div>\n          <div class={recipeCard_nutrientInfoLine}>\n            <p>Protein:</p>\n            <p>{proteinAmount}</p>\n          </div>\n          <div class={recipeCard_nutrientInfoLine}>\n            <p>Fat:</p>\n            <p>{fatAmount}</p>\n          </div>\n          <div class={recipeCard_nutrientInfoLine}>\n            <p>Carbohydrates:</p>\n            <p>{carbohydratesAmount}</p>\n          </div>\n        </div>\n        <p class={modalRecipeContainer_instructions}>{instructions}</p>\n        <p>Ready in: {readyInMinutes} minutes.</p>\n        <button\n          onClick={() => {\n            setIsModalRecipeOpened(false);\n          }}\n        >\n          Close Modal\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport function ModalRecipe({ modalRecipeData, setIsModalRecipeOpened }) {\n  const preparedModalRecipeData = getPreparedModalRecipeData(modalRecipeData);\n  const content = CreateModalRecipeWindow(preparedModalRecipeData, setIsModalRecipeOpened);\n  return content;\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { openModalRecipe } from '../ModalRecipe/ModalRecipe';\nimport { recipeCard, recipeCard_image, recipeCard_nutrientInfoLine } from './RecipeCard.css';\nimport { getNutrientAmount } from '../../utils';\n\nexport function getPreparedRecipeCardData({\n  id,\n  title,\n  image,\n  instructions,\n  readyInMinutes,\n  nutrition: { nutrients },\n}) {\n  const caloriesAmount = getNutrientAmount('Calories', nutrients);\n  const fatAmount = getNutrientAmount('Fat', nutrients);\n  const carbohydratesAmount = getNutrientAmount('Carbohydrates', nutrients);\n  const proteinAmount = getNutrientAmount('Protein', nutrients);\n\n  return {\n    id,\n    title,\n    image,\n    instructions,\n    readyInMinutes,\n    nutrients,\n    caloriesAmount,\n    fatAmount,\n    carbohydratesAmount,\n    proteinAmount,\n  };\n}\n\nexport function RecipeCard({\n  id,\n  title,\n  image,\n  instructions,\n  readyInMinutes,\n  nutrients,\n  caloriesAmount,\n  fatAmount,\n  carbohydratesAmount,\n  proteinAmount,\n}) {\n  return (\n    <li class={recipeCard} id={id}>\n      <h4>{title}</h4>\n      <img class={recipeCard_image} src={image} alt={title} />\n      <div class={recipeCard_nutrientInfoLine}>\n        <p>Calories:</p>\n        <p>{caloriesAmount}</p>\n      </div>\n      <div class={recipeCard_nutrientInfoLine}>\n        <p>Protein:</p>\n        <p>{proteinAmount}</p>\n      </div>\n      <div class={recipeCard_nutrientInfoLine}>\n        <p>Fat:</p>\n        <p>{fatAmount}</p>\n      </div>\n      <div class={recipeCard_nutrientInfoLine}>\n        <p>Carbohydrates:</p>\n        <p>{carbohydratesAmount}</p>\n      </div>\n    </li>\n  );\n}\n","export { RecipeCard, getPreparedRecipeCardData } from './RecipeCard';\n","export {\n  getModalRecipeData,\n  openModalRecipe,\n  closeModalRecipe,\n  getPreparedModalRecipeData,\n  CreateModalRecipeWindow,\n  ModalRecipe,\n} from './ModalRecipe';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { recipesContainer, mealDescription, recipeCardsContainer } from './DailyMealPlan.css';\nimport { getPreparedRecipeCardData, RecipeCard } from '../RecipeCard';\nimport { openModalRecipe } from '../ModalRecipe';\n\nfunction findTargetCardAndOpenModal(\n  { target },\n  setIsModalRecipeOpened,\n  setModalRecipeData,\n  detailedRecipes,\n) {\n  let card = target.closest('li');\n  if (!card) return;\n  openModalRecipe(card.id, setIsModalRecipeOpened, setModalRecipeData, detailedRecipes);\n}\n\nexport default function DailyMealPlan({\n  dailyMealPlan,\n  detailedRecipes,\n  setIsModalRecipeOpened,\n  setModalRecipeData,\n}) {\n  let content = null;\n  let contentDescription = null;\n  if (dailyMealPlan) {\n    const {\n      meals,\n      nutrients: { calories, protein, fat, carbohydrates },\n    } = dailyMealPlan;\n    contentDescription = (\n      <>\n        <h3>Meal Description</h3>\n        <div>\n          <p>Here is your daily meal plan: breakfast, lunch and dinner.</p>\n          <p>Enjoy it!</p>\n          <p>Calories: ${calories}</p>\n          <p>Protein: ${protein}</p>\n          <p>Fat: ${fat}</p>\n          <p>Carbohydrates: ${carbohydrates}</p>\n        </div>\n      </>\n    );\n  }\n\n  if (detailedRecipes.length) {\n    const recipeCards = detailedRecipes.map(detailedRecipeCardData => {\n      const preparedRecipeCardData = getPreparedRecipeCardData(detailedRecipeCardData);\n      return RecipeCard(preparedRecipeCardData);\n    });\n    content = recipeCards;\n  }\n\n  return (\n    <div class={recipesContainer}>\n      <div class={mealDescription}>{contentDescription}</div>\n      <ul\n        class={recipeCardsContainer}\n        onClick={event => {\n          findTargetCardAndOpenModal(\n            event,\n            setIsModalRecipeOpened,\n            setModalRecipeData,\n            detailedRecipes,\n          );\n        }}\n      >\n        {content}\n      </ul>\n    </div>\n  );\n}\n","import { useEffect, useState } from '../framework';\nimport { calculateMaxCalories, isCurrentRecipeInCache } from '../utils';\nimport {\n  getRapidAPIFetchOptionsData,\n  getUrlOfDetailedRecipe,\n  getSearchRecipeUrl,\n} from '../data/spoonacularAPI';\n\nexport function getShortRecipesData() {\n  const [currentGoal, setCurrentGoal] = useState('gain');\n  const [usersWeight, setUsersWeight] = useState('22');\n  const [isSubmitClicked, setIsSubmitClicked] = useState(false);\n  const [isShortRecipesInfoLoaded, setIsShortRecipesInfoLoaded] = useState(false);\n  const [shortRecipesData, setShortRecipesData] = useState([]);\n  const [dailyMealPlan, setDailyMealPlan] = useState('');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (isSubmitClicked) {\n      let promise = loadDailyMealPlan();\n      promise.then(({ meals, nutrients }) => {\n        setIsShortRecipesInfoLoaded(true);\n        setShortRecipesData({ results: meals });\n      });\n      function loadDailyMealPlan() {\n        const maxCalories = calculateMaxCalories(currentGoal, usersWeight);\n        return fetch(\n          `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/mealplans/generate?timeFrame=day&targetCalories=${maxCalories}`,\n          getRapidAPIFetchOptionsData(),\n        )\n          .then(response => {\n            if (response.ok) return response.json();\n            throw new Error(`Error` + response.status + response.json);\n          })\n          .then(data => {\n            setDailyMealPlan(data);\n            return data;\n          })\n          .catch(err => {\n            setError(err);\n          });\n        // .finally(() => console.log('loadedShortRecipes'));\n      }\n    }\n  }, [isSubmitClicked, currentGoal, usersWeight]);\n\n  return {\n    currentGoal,\n    usersWeight,\n    isSubmitClicked,\n    isShortRecipesInfoLoaded,\n    shortRecipesData,\n    dailyMealPlan,\n    error,\n    setCurrentGoal,\n    setUsersWeight,\n    setIsSubmitClicked,\n    setError,\n  };\n}\n\nexport function getShortRecipesFridgeData() {\n  const [isMagicButtonClicked, setIsMagicButtonClicked] = useState(false);\n  const [magicFridgeItems, setMagicFridgeItems] = useState([]);\n  const [errorInTheFridge, setErrorInTheFridge] = useState(false);\n  const [isMagicFridge, setIsMagicFridge] = useState(false);\n  const [err, setErr] = useState('');\n  const [isShortRecipesInfoLoaded, setIsShortRecipesInfoLoaded] = useState(false);\n  const [shortRecipesData, setShortRecipesData] = useState([]);\n\n  useEffect(() => {\n    if (isMagicButtonClicked) {\n      let promise = loadMagicFridgeRecipes();\n      promise.then(data => {\n        setIsShortRecipesInfoLoaded(true);\n        setShortRecipesData({ results: data });\n      });\n\n      function loadMagicFridgeRecipes() {\n        let ingredientsQueryString = magicFridgeItems.reduce(\n          (final, current) => final.concat(current + '%2C'),\n          '',\n        );\n        return fetch(\n          `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/findByIngredients?ingredients=${ingredientsQueryString}&number=4&ignorePantry=false&ranking=1`,\n          getRapidAPIFetchOptionsData(),\n        )\n          .then(response => {\n            if (response.ok) return response.json();\n            throw new Error(`Error` + response.status + response.json);\n          })\n          .then(data => {\n            if (!data.length) {\n              setErrorInTheFridge(true);\n              return data;\n            } else {\n              setErrorInTheFridge(false);\n              setIsMagicFridge(true);\n              return data;\n            }\n          })\n          .catch(err => {\n            setErr('Ohh.. error has happened during short recipes loading');\n          });\n        // .finally(() => console.log('shortRecipesDataLoaded'));\n      }\n    }\n  }, [isMagicButtonClicked, magicFridgeItems]);\n\n  return {\n    isMagicButtonClicked,\n    magicFridgeItems,\n    isMagicFridge,\n    errorInTheFridge,\n    err,\n    shortRecipesData,\n    isShortRecipesInfoLoaded,\n    setMagicFridgeItems,\n    setIsMagicButtonClicked,\n  };\n}\n\nexport function getShortRecipesSearchData() {\n  const [searchedRecipe, setSearchedRecipe] = useState('');\n  const [error, setError] = useState('');\n  const [isDataLoading, setIsDataLoading] = useState(false);\n  const [isShortRecipesInfoLoaded, setIsShortRecipesInfoLoaded] = useState(false);\n  const [shortRecipesData, setShortRecipesData] = useState([]);\n  const [testa, setTesta] = useState(0);\n  useEffect(() => {\n    // window.dataStore.error = null;\n    if (searchedRecipe) {\n      // setError(null);\n      // setIsDataLoading(true);\n      let promise = validateAndLoadData();\n      promise.then(({ data: { results } }) => {\n        setIsShortRecipesInfoLoaded(true);\n        setShortRecipesData({ results });\n      });\n    }\n\n    // window.dataStore.isDataLoading = true;\n    // renderApp();\n    // validateAndLoadData()\n    //   .then(({ error, data }) => {\n    //     // window.dataStore.isDataLoading = false;\n    //     setIsDataLoading(false);\n    //     if (error) {\n    //       // window.dataStore.error = error;\n    //       setError(error);\n    //     } else if (data) {\n    //       if (!data.results.length) {\n    //         throw new Error('wrong input');\n    //       }\n    //       // window.dataStore.recipesInCache[recipeName] = data;\n    //       // loadDetailedRecipesInfo(data, 'detailedSearchedRecipes');\n    //       setShortRecipesData(data);\n    //       console.log(shortRecipesData);\n    //     } else {\n    //       // loadDetailedRecipesInfo(\n    //       //   window.dataStore.recipesInCache[recipeName],\n    //       //   'detailedSearchedRecipes',\n    //       // );\n    //       console.log('here is space for cache');\n    //     }\n    //   })\n    //   .catch(err => {\n    //     // window.dataStore.error = `Ooops.. ${err}`;\n    //     setError(`Oops, error ... ${err}`);\n    //   })\n    //   .finally(() => console.log('shortRecipesLoaded'));\n    function validateAndLoadData() {\n      const url = getSearchRecipeUrl(searchedRecipe);\n\n      // if (!isCurrentRecipeInCache()) {\n      return fetch(url, getRapidAPIFetchOptionsData())\n        .then(response => {\n          if (response.ok) return response.json();\n          throw new Error(`Error` + response.status + response.json);\n        })\n        .then(data => {\n          setShortRecipesData({ data });\n          return { data };\n        });\n      // }\n      return Promise.resolve({});\n    }\n    // console.log('aaa');\n    // console.log(shortRecipesData);\n    // console.log('aaa');\n  }, [searchedRecipe]);\n  return {\n    searchedRecipe,\n    setSearchedRecipe,\n    shortRecipesData,\n    isShortRecipesInfoLoaded,\n  };\n}\n\nexport function getDetailedRecipesData({ isShortRecipesInfoLoaded, shortRecipesData, setError }) {\n  const [detailedRecipes, setDetailedRecipes] = useState([]);\n\n  useEffect(() => {\n    if (isShortRecipesInfoLoaded) {\n      loadDetailedRecipesInfo(shortRecipesData);\n      function loadDetailedRecipesInfo({ results }) {\n        const urlsOfDetailedRecipes = results.map(result => getUrlOfDetailedRecipe(result.id));\n        let requests = urlsOfDetailedRecipes.map(url => fetch(url, getRapidAPIFetchOptionsData()));\n        return Promise.all(requests)\n          .then(responses => Promise.all(responses.map(r => r.json())))\n          .then(data => {\n            if (!data.length) {\n              throw new Error('Please enter valid ingredient.');\n            }\n            setDetailedRecipes(data);\n          })\n          .catch(error => {\n            setError('Error inside loadDetailedRecipesInfo');\n          });\n        // .finally(() => console.log('loadedDetailedRecipes'));\n      }\n    }\n  }, [isShortRecipesInfoLoaded, shortRecipesData]);\n  return {\n    detailedRecipes,\n  };\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, useState, useEffect } from '../../framework';\nimport { getMealPlanByGoal } from './GetMealPlanByGoal.css';\nimport SetGoal from '../SetGoal';\nimport DailyMealPlan from '../DailyMealPlan/DailyMealPlan';\nimport { getShortRecipesData, getDetailedRecipesData } from '../../framework/customHooks';\nimport { AppContext } from '../../context';\nimport { getRapidAPIFetchOptionsData, getUrlOfDetailedRecipe } from '../../data/spoonacularAPI';\nimport { ModalRecipe } from '../ModalRecipe';\n\nexport default function GetMealPlanByGoal() {\n  const {\n    currentGoal,\n    usersWeight,\n    isSubmitClicked,\n    isShortRecipesInfoLoaded,\n    shortRecipesData,\n    dailyMealPlan,\n    error,\n    setCurrentGoal,\n    setUsersWeight,\n    setIsSubmitClicked,\n    setError,\n  } = getShortRecipesData();\n  const { detailedRecipes } = getDetailedRecipesData({\n    isShortRecipesInfoLoaded,\n    shortRecipesData,\n    setError,\n  });\n  const [isModalRecipeOpened, setIsModalRecipeOpened] = useState(false);\n  const [modalRecipeData, setModalRecipeData] = useState([]);\n\n  return (\n    <div class={getMealPlanByGoal}>\n      <AppContext.Provider value={currentGoal}>\n        <SetGoal\n          // currentGoal={currentGoal}\n          setCurrentGoal={setCurrentGoal}\n          usersWeight={usersWeight}\n          setUsersWeight={setUsersWeight}\n          setIsSubmitClicked={setIsSubmitClicked}\n        />\n      </AppContext.Provider>\n      <DailyMealPlan\n        dailyMealPlan={dailyMealPlan}\n        detailedRecipes={detailedRecipes}\n        setIsModalRecipeOpened={setIsModalRecipeOpened}\n        setModalRecipeData={setModalRecipeData}\n      />\n      {isModalRecipeOpened ? (\n        <ModalRecipe\n          modalRecipeData={modalRecipeData}\n          setIsModalRecipeOpened={setIsModalRecipeOpened}\n        />\n      ) : null}\n    </div>\n  );\n}\n","export { default } from './GetMealPlanByGoal';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment, useState } from '../../framework';\nimport { render } from '../../framework';\nimport styles from './AddFridgeIngredients.css';\n\nfunction FillFridgeOnChange(value, magicFridgeItems, setMagicFridgeItems) {\n  if (magicFridgeItems.length < 5) {\n    setMagicFridgeItems([...magicFridgeItems, value]);\n    value = '';\n  } else {\n    alert('5 ingredients are maximum');\n  }\n}\n\nexport default function AddFridgeIngredients({ magicFridgeItems, setMagicFridgeItems }) {\n  return (\n    <>\n      <h2>What's in your fridge?</h2>\n      <p class={styles.getRecipeByIngredientsHeader_p}>\n        Enter up to 5 products you have in the fridge to cook the best meal. Example: apple, milk,\n        sugar.\n      </p>\n      <input\n        type=\"text\"\n        placeholder=\"what is in your fridge?\"\n        onChange={e => FillFridgeOnChange(e.target.value, magicFridgeItems, setMagicFridgeItems)}\n      />\n      <button type=\"submit\">+add</button>\n    </>\n  );\n}\n","export { default } from './AddFridgeIngredients';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../../framework/element';\nimport renderApp from '../../framework/render';\nimport {\n  fridgeItemContainer,\n  fridgeItemContainer_button,\n  fridgeItemContainer_label,\n} from './FridgeItem.css';\n\nexport function FridgeItem(fridgeItemData) {\n  return (\n    <li class={fridgeItemContainer} id={fridgeItemData}>\n      <button class={fridgeItemContainer_button}>{'x'}</button>\n      <label class={fridgeItemContainer_label} For={fridgeItemData}>\n        {fridgeItemData}\n      </label>\n    </li>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport {\n  fridgeIngredientsListContainer_magicButton,\n  fridgeIngredientsListContainer,\n  fridgeIngredientsListContainer_inner,\n} from './FridgeIngredients.css';\nimport { FridgeItem } from '../FridgeItem/FridgeItem';\nimport { loadMagicFridgeRecipes, loadDetailedRecipesInfo } from '../../data/spoonacularAPI';\nimport renderApp from '../../framework/render';\n\nfunction removeFridgeItem(target, magicFridgeItems, setMagicFridgeItems) {\n  const item = target.closest('li');\n  const id = item.id;\n  if (!item) return;\n  setMagicFridgeItems(magicFridgeItems.filter(item => item !== id));\n  renderApp();\n}\n\nexport default function FridgeIngredients({\n  magicFridgeItems,\n  setMagicFridgeItems,\n  setIsMagicButtonClicked,\n}) {\n  let content = null;\n  let magicButton = null;\n  if (magicFridgeItems.length > 0) {\n    magicButton = (\n      <button\n        class={fridgeIngredientsListContainer_magicButton}\n        onClick={() => setIsMagicButtonClicked(true)}\n      >\n        Magic\n      </button>\n    );\n  }\n  content = (\n    <ul onClick={event => removeFridgeItem(event.target, magicFridgeItems, setMagicFridgeItems)}>\n      {magicFridgeItems.map(fridgeItemData => FridgeItem(fridgeItemData))}\n    </ul>\n  );\n  return (\n    <div class={fridgeIngredientsListContainer}>\n      <div class={fridgeIngredientsListContainer_inner}>{content}</div>\n      {magicButton}\n    </div>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../../framework';\nimport { getRecipeByIngredientsHeader } from './FillFridge.css';\nimport AddFridgeIngredients from '../AddFridgeIngredients';\nimport FridgeIngredients from '../FridgeIngredients/FridgeIngredients';\n\nexport default function FillFridge({\n  magicFridgeItems,\n  setMagicFridgeItems,\n  setIsMagicButtonClicked,\n}) {\n  return (\n    <div class={getRecipeByIngredientsHeader}>\n      <AddFridgeIngredients\n        magicFridgeItems={magicFridgeItems}\n        setMagicFridgeItems={setMagicFridgeItems}\n      />\n      <FridgeIngredients\n        magicFridgeItems={magicFridgeItems}\n        setMagicFridgeItems={setMagicFridgeItems}\n        setIsMagicButtonClicked={setIsMagicButtonClicked}\n      />\n    </div>\n  );\n}\n","export { default } from './FillFridge';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment, useState } from '../../framework';\nimport { mealDescription, recipeCardsContainer } from './FridgeRecipes.css';\nimport { getPreparedRecipeCardData, RecipeCard } from '../RecipeCard/RecipeCard';\nimport { openModalRecipe, ModalRecipe } from '../ModalRecipe';\n\nfunction findElementAndOpenModal(\n  target,\n  setIsModalRecipeOpened,\n  setModalRecipeData,\n  detailedRecipes,\n) {\n  let card = target.closest('li');\n  if (!card) return;\n  // console.log('----');\n  // console.log(detailedRecipes);\n  // console.log('----');\n  openModalRecipe(card.id, setIsModalRecipeOpened, setModalRecipeData, detailedRecipes);\n}\n\nexport default function FridgeRecipes({ detailedRecipes, isMagicFridge, errorInTheFridge }) {\n  // const { isMagicFridge, detailedRecipes, errorInTheFridge } = window.dataStore;\n  const [isModalRecipeOpened, setIsModalRecipeOpened] = useState(false);\n  const [modalRecipeData, setModalRecipeData] = useState([]);\n  let content = '';\n  let contentDescription = '';\n  if (errorInTheFridge) {\n    contentDescription = <div>Please add at least one valid ingredient.</div>;\n    return <div>{contentDescription}</div>;\n  }\n  if (isMagicFridge) {\n    contentDescription = (\n      <>\n        <h3>Here we go!</h3>\n        <p>\n          We have tried to select the best fitting recipes based on your fridge ingredients. Some\n          ingredients may be missing so your imagination can help you how to change them and cook\n          the best meal ever!\n        </p>\n      </>\n    );\n  }\n  if (detailedRecipes.length) {\n    const recipeCards = detailedRecipes.map(detailedRecipeCardData => {\n      const preparedRecipeCardData = getPreparedRecipeCardData(detailedRecipeCardData);\n      return RecipeCard(preparedRecipeCardData);\n    });\n    content = recipeCards;\n  }\n  return (\n    <div>\n      <div class={mealDescription}>{contentDescription}</div>\n      <ul\n        class={recipeCardsContainer}\n        onClick={event =>\n          findElementAndOpenModal(\n            event.target,\n            setIsModalRecipeOpened,\n            setModalRecipeData,\n            detailedRecipes,\n          )\n        }\n      >\n        {content}\n      </ul>\n      {isModalRecipeOpened ? (\n        <ModalRecipe\n          modalRecipeData={modalRecipeData}\n          setIsModalRecipeOpened={setIsModalRecipeOpened}\n        />\n      ) : null}\n    </div>\n  );\n}\n","export { default } from './FridgeRecipes';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../../framework/element';\nimport { getRecipeByIngredientsContainer } from './GetRecipeByIngredients.css';\nimport FillFridge from '../FillFridge';\nimport FridgeRecipes from '../FridgeRecipes';\nimport { getDetailedRecipesData, getShortRecipesFridgeData } from '../../framework/customHooks';\n\nexport default function GetRecipeByIngredients() {\n  const {\n    isMagicButtonClicked,\n    magicFridgeItems,\n    isMagicFridge,\n    errorInTheFridge,\n    err,\n    shortRecipesData,\n    isShortRecipesInfoLoaded,\n    setMagicFridgeItems,\n    setIsMagicButtonClicked,\n  } = getShortRecipesFridgeData();\n\n  const { detailedRecipes } = getDetailedRecipesData({\n    isShortRecipesInfoLoaded,\n    shortRecipesData,\n  });\n  return (\n    <div class={getRecipeByIngredientsContainer}>\n      <FillFridge\n        magicFridgeItems={magicFridgeItems}\n        setMagicFridgeItems={setMagicFridgeItems}\n        setIsMagicButtonClicked={setIsMagicButtonClicked}\n      />\n      <FridgeRecipes\n        detailedRecipes={detailedRecipes}\n        isMagicFridge={isMagicFridge}\n        errorInTheFridge={errorInTheFridge}\n      />\n    </div>\n  );\n}\n","export { default } from './GetRecipeByIngredients';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { performSearchRecipes } from '../../data/spoonacularAPI';\nimport { searchForRecipeByNameContainer_header } from './InputRecipeName.css';\n\nexport default function InputRecipeName({ searchedRecipe, setSearchedRecipe }) {\n  return (\n    <div class={searchForRecipeByNameContainer_header}>\n      <h2>Search by recipe name</h2>\n      <input\n        type=\"text\"\n        value={searchedRecipe}\n        placeholder=\"enter recipe (ex: rice)\"\n        onkeydown={({ code, target }) => {\n          if (code === 'Enter' || code === 'NumpadEnter') {\n            setSearchedRecipe(target.value);\n          }\n        }}\n      />\n    </div>\n  );\n}\n","export { default } from './InputRecipeName';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { RecipeCard, getPreparedRecipeCardData } from '../RecipeCard';\nimport { openModalRecipe } from '../ModalRecipe';\nimport { isCurrentRecipeInCache } from '../../utils';\nimport { recipeCardsContainer } from './SearchedRecipes.css';\n\nfunction findTargetCardAndOpenModal(\n  { target },\n  setIsModalRecipeOpened,\n  setModalRecipeData,\n  detailedRecipes,\n) {\n  let card = target.closest('li');\n  if (!card) return;\n  openModalRecipe(card.id, setIsModalRecipeOpened, setModalRecipeData, detailedRecipes);\n}\n\nexport default function SearchedRecipes({\n  detailedRecipes,\n  setIsModalRecipeOpened,\n  setModalRecipeData,\n}) {\n  // const {\n  //   searchedRecipe,\n  //   isDataLoading,\n  //   error,\n  //   detailedSearchedRecipes,\n  //   recipesInCache,\n  // } = window.dataStore;\n  let content = '';\n\n  //initial state\n  // if (searchedRecipe === '') {\n  //   content = <p>Please enter recipe name.</p>;\n  // } else {\n  //   //loading state\n  //   if (isDataLoading) {\n  //     content = <p>Loading...</p>;\n  //   }\n  //   //error state\n  //   if (error) {\n  //     content = error;\n  //   }\n  //results state\n  // if (isCurrentRecipeInCache()) {\n  const recipeCards = detailedRecipes.map(detailedRecipeCardData => {\n    const preparedRecipeCardData = getPreparedRecipeCardData(detailedRecipeCardData);\n    return RecipeCard(preparedRecipeCardData);\n  });\n  content = recipeCards;\n  // }\n  // }\n  return (\n    <ul\n      class={recipeCardsContainer}\n      onClick={event =>\n        findTargetCardAndOpenModal(\n          event,\n          setIsModalRecipeOpened,\n          setModalRecipeData,\n          detailedRecipes,\n        )\n      }\n    >\n      {content}\n    </ul>\n  );\n}\n","export { default } from './SearchedRecipes';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, useState, useEffect } from '../../framework';\nimport { searchForRecipeByNameContainer } from './SearchForRecipesByName.css';\nimport InputRecipeName from '../InputRecipeName';\nimport SearchedRecipes from '../SearchedRecipes';\nimport { getDetailedRecipesData, getShortRecipesSearchData } from '../../framework/customHooks';\nimport { ModalRecipe } from '../ModalRecipe';\n\nexport default function SearchForRecipesByName() {\n  const {\n    searchedRecipe,\n    setSearchedRecipe,\n    shortRecipesData,\n    isShortRecipesInfoLoaded,\n  } = getShortRecipesSearchData();\n  const { detailedRecipes } = getDetailedRecipesData({\n    isShortRecipesInfoLoaded,\n    shortRecipesData,\n  });\n  const [isModalRecipeOpened, setIsModalRecipeOpened] = useState(false);\n  const [modalRecipeData, setModalRecipeData] = useState([]);\n  return (\n    <div class={searchForRecipeByNameContainer}>\n      <InputRecipeName searchedRecipe={searchedRecipe} setSearchedRecipe={setSearchedRecipe} />\n      <SearchedRecipes\n        detailedRecipes={detailedRecipes}\n        setIsModalRecipeOpened={setIsModalRecipeOpened}\n        setModalRecipeData={setModalRecipeData}\n      />\n      {isModalRecipeOpened ? (\n        <ModalRecipe\n          modalRecipeData={modalRecipeData}\n          setIsModalRecipeOpened={setIsModalRecipeOpened}\n        />\n      ) : null}\n    </div>\n  );\n}\n","export { default } from './SearchForRecipesByName';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, useState } from '../../framework';\nimport GetMealPlanByGoal from '../GetMealPlanByGoal';\nimport GetRecipeByIngredients from '../GetRecipeByIngredients';\nimport SearchForRecipesByName from '../SearchForRecipesByName';\nimport { ModalRecipe } from '../ModalRecipe';\nimport { appContainer, header } from './App.css';\n\nexport default function App() {\n  return (\n    <div class={appContainer}>\n      <header class={header}>\n        <h1>YummySpoon</h1>\n      </header>\n      <GetMealPlanByGoal />\n      <GetRecipeByIngredients />\n      <SearchForRecipesByName />\n    </div>\n  );\n}\n","export { default } from './App';\n","// Start from here\nimport dataStore from './data/dataStore';\nimport { render } from './framework';\nimport App from './components/App';\n\nwindow.dataStore = dataStore;\n\nif (module.hot) {\n  module.hot.accept();\n}\n\nrender(App, document.getElementById('app-root'));\n"]}