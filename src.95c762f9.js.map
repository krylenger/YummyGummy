{"version":3,"sources":["data/dataStore.js","utils.js","data/spoonacularAPI.js","components/ModalRecipe.js","framework/render.js","components/GoalSwitch.js","components/SetGoal.js","components/RecipeCard.js","components/DailyMealPlan.js","components/GetMealPlanByGoal.js","components/AddFridgeIngredients.js","components/FridgeItem.js","components/FridgeIngredients.js","components/FillFridge.js","components/FridgeRecipes.js","components/GetRecipeByIngredients.js","components/SearchRecipes.js","components/SearchByNameRecipes.js","components/SearchForRecipesByName.js","components/App.js","index.js"],"names":["dataStore","currentGoal","usersWeight","magicFridgeItems","searchedRecipe","recipesInCache","detailedMealPlanRecipes","detailedMagicFridgeRecipes","detailedSearchedRecipes","isMagicFridge","isDataLoading","error","errorInTheFridge","dailyMealPlan","isModalRecipeOpened","modalRecipeData","getNutrientAmount","nutrientName","arrayOfAllNutrients","searchedNutrient","find","nutrient","name","amount","calculateMaxCalories","caloriesAmount","parseInt","isCurrentRecipeInCache","window","Boolean","getSearchRecipeUrl","searchedWord","getUrlOfDetailedRecipe","id","getRapidAPIFetchOptionsData","method","headers","getDailyMealPlan","loadDailyMealPlan","then","meals","nutrients","loadDetailedRecipesInfo","results","maxCalories","fetch","response","ok","json","Error","status","data","catch","err","finally","renderApp","loadMagicFridgeRecipes","ingredientsArray","ingredientsQueryString","reduce","final","current","concat","length","whereToLoad","requests","map","result","url","Promise","all","responses","r","validateAndLoadData","resolve","performSearchRecipes","recipeName","getModalRecipeData","targetId","openModalRecipe","getPreparedModalRecipeData","image","instructions","nutrition","readyInMinutes","title","fatAmount","carbohydratesAmount","proteinAmount","CreateModalRecipeWindow","styles","modalRecipeContainer","modalRecipeContainerInner","modalRecipeContainer_image","modalRecipeContainer_nutrientsContainer","recipeCard_nutrientInfoLine","modalRecipeContainer_instructions","RenderModalRecipe","content","Component","Target","functionalComponent","targetElementId","document","getElementById","innerHTML","GoalSwitch","setCurrentGoal","goal","join","value","SetGoal","getMealPlanByGoalHeader","getMealPlanByGoalHeader_h2","getMealPlanByGoalHeader_p","getPreparedRecipeCardData","RecipeCard","recipeCard","recipeCard_image","DailyMealPlan","contentDescription","calories","protein","fat","carbohydrates","detailedRecipeCardData","preparedRecipeCardData","recipesContainer","mealDescription","recipeCardsContainer","GetMealPlanByGoal","getMealPlanByGoal","FillFridgeOnChangeCB","push","alert","AddFridgeIngredients","getRecipeByIngredientsHeader_p","removeFridgeItem","filter","item","FridgeItem","fridgeItemData","fridgeItemContainer","fridgeItemContainer_button","fridgeItemContainer_label","magicButtonCB","FridgeIngredients","confirmButton","fridgeIngredientsListContainer_magicButton","fridgeIngredientsListContainer","fridgeIngredientsListContainer_inner","FillFridge","getRecipeByIngredientsHeader","FridgeRecipes","GetRecipeByIngredients","getRecipeByIngredientsContainer","SearchRecipes","searchForRecipeByNameContainer_header","SearchByNameRecipes","SearchForRecipesByName","searchForRecipeByNameContainer","App","appContainer","header","module","hot","accept"],"mappings":"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","file":"src.95c762f9.js","sourceRoot":"../src","sourcesContent":["const dataStore = {\n  currentGoal: '',\n  usersWeight: '',\n  magicFridgeItems: [],\n  searchedRecipe: '',\n  recipesInCache: [],\n  detailedMealPlanRecipes: [],\n  detailedMagicFridgeRecipes: [],\n  detailedSearchedRecipes: [],\n  isMagicFridge: false,\n  isDataLoading: false,\n  error: null,\n  errorInTheFridge: null,\n  dailyMealPlan: '',\n  isModalRecipeOpened: false,\n  modalRecipeData: '',\n};\n\nexport default dataStore;\n","export function getNutrientAmount(nutrientName, arrayOfAllNutrients) {\n  let searchedNutrient = arrayOfAllNutrients.find(nutrient => nutrient.name === nutrientName);\n  return searchedNutrient.amount;\n}\n\nexport function calculateMaxCalories(currentGoal, usersWeight) {\n  usersWeight = parseInt(usersWeight);\n  let caloriesAmount;\n\n  if (currentGoal === 'lose') {\n    if (usersWeight <= 50) {\n      caloriesAmount = usersWeight * 10 + 1200 - 200;\n    } else if (usersWeight > 50 && usersWeight <= 80) {\n      caloriesAmount = usersWeight * 10 + 1400 - 200;\n    } else if (usersWeight > 80 && usersWeight <= 110) {\n      caloriesAmount = usersWeight * 10 + 1600 - 200;\n    } else {\n      caloriesAmount = usersWeight * 10 + 1800 - 200;\n    }\n  } else {\n    if (usersWeight <= 50) {\n      caloriesAmount = usersWeight * 10 + 1200;\n    } else if (usersWeight > 50 && usersWeight <= 80) {\n      caloriesAmount = usersWeight * 10 + 1400;\n    } else if (usersWeight > 80 && usersWeight <= 110) {\n      caloriesAmount = usersWeight * 10 + 1600;\n    } else {\n      caloriesAmount = usersWeight * 10 + 1800;\n    }\n  }\n  return caloriesAmount;\n}\n\nexport function isCurrentRecipeInCache() {\n  const { recipesInCache, searchedRecipe } = window.dataStore;\n  return Boolean(recipesInCache[searchedRecipe]);\n}\n","import { calculateMaxCalories, isCurrentRecipeInCache } from '../utils';\n\nexport function getSearchRecipeUrl(searchedWord) {\n  return `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/search?query=${searchedWord}&number=5`;\n}\n\nexport function getUrlOfDetailedRecipe(id) {\n  return `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/${id}/information?includeNutrition=true`;\n}\n\nexport function getRapidAPIFetchOptionsData() {\n  return {\n    method: 'GET',\n    headers: {\n      'x-rapidapi-key': `${process.env.rapidApiKey}`,\n      'x-rapidapi-host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',\n    },\n  };\n}\n\nexport function getDailyMealPlan() {\n  let promise = loadDailyMealPlan();\n  promise.then(({ meals, nutrients }) => {\n    loadDetailedRecipesInfo({ results: meals }, 'detailedMealPlanRecipes');\n  });\n}\n\nexport function loadDailyMealPlan() {\n  const { currentGoal, usersWeight } = window.dataStore;\n  const maxCalories = calculateMaxCalories(currentGoal, usersWeight);\n\n  return fetch(\n    `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/mealplans/generate?timeFrame=day&targetCalories=${maxCalories}`,\n    getRapidAPIFetchOptionsData(),\n  )\n    .then(response => {\n      if (response.ok) return response.json();\n      throw new Error(`Error` + response.status + response.json);\n    })\n    .then(data => {\n      window.dataStore.dailyMealPlan = data;\n      return data;\n    })\n    .catch(err => {\n      window.dataStore.err = err;\n    })\n    .finally(window.renderApp);\n}\n\nexport function loadMagicFridgeRecipes() {\n  const ingredientsArray = window.dataStore.magicFridgeItems;\n  let ingredientsQueryString = ingredientsArray.reduce(\n    (final, current) => final.concat(current + '%2C'),\n    '',\n  );\n  return fetch(\n    `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/findByIngredients?ingredients=${ingredientsQueryString}&number=4&ignorePantry=false&ranking=1`,\n    getRapidAPIFetchOptionsData(),\n  )\n    .then(response => {\n      if (response.ok) return response.json();\n      throw new Error(`Error` + response.status + response.json);\n    })\n    .then(data => {\n      if (!data.length) {\n        window.dataStore.errorInTheFridge = true;\n        return data;\n      } else {\n        window.dataStore.errorInTheFridge = false;\n        window.dataStore.isMagicFridge = true;\n        return data;\n      }\n    })\n    .catch(err => {\n      window.dataStore.err = err;\n    })\n    .finally(window.renderApp);\n}\n\nexport function loadDetailedRecipesInfo({ results }, whereToLoad) {\n  const urlsOfDetailedRecipes = results.map(result => getUrlOfDetailedRecipe(result.id));\n  let requests = urlsOfDetailedRecipes.map(url => fetch(url, getRapidAPIFetchOptionsData()));\n  return Promise.all(requests)\n    .then(responses => Promise.all(responses.map(r => r.json())))\n    .then(data => {\n      if (!data.length) {\n        throw new Error('Please enter valid ingredient.');\n      }\n      window.dataStore[whereToLoad] = data;\n    })\n    .catch(error => {\n      window.dataStore.error = 'Error inside loadDetailedRecipesInfo';\n    })\n    .finally(window.renderApp);\n}\n\nexport function validateAndLoadData() {\n  const { searchedRecipe } = window.dataStore;\n  const url = getSearchRecipeUrl(searchedRecipe);\n\n  if (!isCurrentRecipeInCache()) {\n    return fetch(url, getRapidAPIFetchOptionsData())\n      .then(response => {\n        if (response.ok) return response.json();\n        throw new Error(`Error` + response.status + response.json);\n      })\n      .then(data => ({ data }));\n  }\n  return Promise.resolve({});\n}\n\nexport function performSearchRecipes(recipeName) {\n  window.dataStore.searchedRecipe = recipeName;\n  window.dataStore.error = null;\n  window.dataStore.isDataLoading = true;\n  window.renderApp();\n\n  window\n    .validateAndLoadData()\n    .then(({ error, data }) => {\n      window.dataStore.isDataLoading = false;\n      if (error) {\n        window.dataStore.error = error;\n      } else if (data) {\n        if (!data.results.length) {\n          throw new Error('wrong input');\n        }\n        window.dataStore.recipesInCache[recipeName] = data;\n        loadDetailedRecipesInfo(data, 'detailedSearchedRecipes');\n      }\n    })\n    .catch(err => {\n      window.dataStore.error = `Ooops.. ${err}`;\n    })\n    .finally(window.renderApp);\n}\n","import styles from '../../style.css';\nimport { getNutrientAmount } from '../utils';\n\nexport function getModalRecipeData(targetId) {\n  const {\n    detailedMealPlanRecipes,\n    detailedSearchedRecipes,\n    detailedMagicFridgeRecipes,\n  } = window.dataStore;\n  let modalRecipeData = '';\n  if (detailedMealPlanRecipes.find(({ id }) => id == targetId)) {\n    return detailedMealPlanRecipes.find(({ id }) => id == targetId);\n  } else if (detailedSearchedRecipes.find(({ id }) => id == targetId)) {\n    return detailedSearchedRecipes.find(({ id }) => id == targetId);\n  } else if (detailedMagicFridgeRecipes.find(({ id }) => id == targetId)) {\n    return detailedMagicFridgeRecipes.find(({ id }) => id == targetId);\n  }\n  return modalRecipeData;\n}\n\nexport function openModalRecipe(targetId) {\n  const modalRecipeData = getModalRecipeData(targetId);\n  window.dataStore.modalRecipeData = modalRecipeData;\n  // window.dataStore.modalRecipeId += `<button onclick=\"window.dataStore.isModalRecipeOpened = false; window.renderApp();\">Close Modal</button>`;\n  window.dataStore.isModalRecipeOpened = true;\n  window.renderApp();\n}\n\nexport function getPreparedModalRecipeData({\n  id,\n  image,\n  instructions,\n  nutrition: { nutrients },\n  readyInMinutes,\n  title,\n}) {\n  const caloriesAmount = getNutrientAmount('Calories', nutrients);\n  const fatAmount = getNutrientAmount('Fat', nutrients);\n  const carbohydratesAmount = getNutrientAmount('Carbohydrates', nutrients);\n  const proteinAmount = getNutrientAmount('Protein', nutrients);\n  return {\n    id,\n    image,\n    instructions,\n    readyInMinutes,\n    title,\n    caloriesAmount,\n    fatAmount,\n    carbohydratesAmount,\n    proteinAmount,\n  };\n}\n\nexport function CreateModalRecipeWindow({\n  id,\n  image,\n  instructions,\n  readyInMinutes,\n  title,\n  caloriesAmount,\n  fatAmount,\n  carbohydratesAmount,\n  proteinAmount,\n}) {\n  return `<div class=\"${styles.modalRecipeContainer}\">\n  <div class=\"${styles.modalRecipeContainerInner}\">\n  <h1>${title}</h1>\n  <div class=\"${styles.modalRecipeContainer_image}\"><img  src=\"${image}\" alt=\"${title}\"></div>\n  <div class=\"${styles.modalRecipeContainer_nutrientsContainer}\">\n  <div class=\"${styles.recipeCard_nutrientInfoLine}\"><p>Calories:</p> <p>${caloriesAmount}</p></div>\n  <div class=\"${styles.recipeCard_nutrientInfoLine}\"><p>Protein:</p> <p>${proteinAmount}</p></div>\n  <div class=\"${styles.recipeCard_nutrientInfoLine}\"><p>Fat:</p> <p>${fatAmount}</p></div>\n  <div class=\"${styles.recipeCard_nutrientInfoLine}\"><p>Carbohydrates:</p> <p>${carbohydratesAmount}</p></div>\n  </div>\n  <p class=\"${styles.modalRecipeContainer_instructions}\">${instructions}</p>\n  <p>Ready in: ${readyInMinutes} minutes.</p>\n  <button onclick=\"window.dataStore.isModalRecipeOpened = false; window.renderApp();\">Close Modal</button></div></div>`;\n}\n\nexport function RenderModalRecipe() {\n  const preparedModalRecipeData = getPreparedModalRecipeData(window.dataStore.modalRecipeData);\n  const content = CreateModalRecipeWindow(preparedModalRecipeData);\n  return content;\n}\n","let Component, Target;\n\nexport default function renderApp(functionalComponent, targetElementId) {\n  if (functionalComponent) Component = functionalComponent;\n  if (targetElementId) Target = targetElementId;\n  document.getElementById(Target).innerHTML = Component();\n}\n","export default function GoalSwitch(currentGoal, setCurrentGoal) {\n  return `\n    ${[\n      { id: 'goalGain', goal: 'gain' },\n      { id: 'goalLose', goal: 'lose' },\n    ]\n      .map(\n        ({ goal, id }) => `\n      <input \n        id=\"${id}\" \n        type=\"radio\" \n        value=\"${goal}\"\n        ${currentGoal === goal ? 'checked' : ''}\n        onchange=\"(${setCurrentGoal})(this.value);\"\n       />\n      <label for=\"${id}\">${goal}</label>  \n    `,\n      )\n      .join('')}`;\n}\n","import styles from '../../style.css';\nimport GoalSwitch from './GoalSwitch';\n\nfunction setCurrentGoal(value) {\n  window.dataStore.currentGoal = value;\n  window.renderApp();\n}\n\nexport default function SetGoal() {\n  const { currentGoal, usersWeight } = window.dataStore;\n  return `<div class=\"${styles.getMealPlanByGoalHeader}\">\n    <h2 class=\"${styles.getMealPlanByGoalHeader_h2}\">Do you want to lose or to gain weight?</h2>\n    ${GoalSwitch(currentGoal, setCurrentGoal)}\n    <p class=\"${\n      styles.getMealPlanByGoalHeader_p\n    }\">In case you want to lose weight, we're going to create a meal plan with a decreased amount of carbs.</p>\n    <p class=\"${\n      styles.getMealPlanByGoalHeader_p\n    }\">If your goal is to gain muscles - we're going to include more high protein dishes.\n    <h4>What's your weight?</h4>\n    <input type=\"number\" value=\"${usersWeight}\" placeholder=\"your weight\" onchange=\"window.dataStore.usersWeight = this.value; window.renderApp();\">\n    <button onclick=\"window.getDailyMealPlan()\">Submit</button>\n  </div>`;\n}\n","import styles from '../../style.css';\nimport { getNutrientAmount } from '../utils';\n\nexport function getPreparedRecipeCardData({\n  id,\n  title,\n  image,\n  instructions,\n  readyInMinutes,\n  nutrition: { nutrients },\n}) {\n  const caloriesAmount = getNutrientAmount('Calories', nutrients);\n  const fatAmount = getNutrientAmount('Fat', nutrients);\n  const carbohydratesAmount = getNutrientAmount('Carbohydrates', nutrients);\n  const proteinAmount = getNutrientAmount('Protein', nutrients);\n\n  return {\n    id,\n    title,\n    image,\n    instructions,\n    readyInMinutes,\n    nutrients,\n    caloriesAmount,\n    fatAmount,\n    carbohydratesAmount,\n    proteinAmount,\n  };\n}\n\nexport function RecipeCard({\n  id,\n  title,\n  image,\n  instructions,\n  readyInMinutes,\n  nutrients,\n  caloriesAmount,\n  fatAmount,\n  carbohydratesAmount,\n  proteinAmount,\n}) {\n  return `<div class=\"${styles.recipeCard}\" id=\"${id}\" onclick=\"window.openModalRecipe(this.id);\"><h4>${title}</h4>\n  <image class=\"${styles.recipeCard_image}\"src=\"${image}\" alt=\"${title}\"/>\n  <div class=\"${styles.recipeCard_nutrientInfoLine}\"><p>Calories:</p> <p>${caloriesAmount}</p></div>\n  <div class=\"${styles.recipeCard_nutrientInfoLine}\"><p>Protein:</p> <p>${proteinAmount}</p></div>\n  <div class=\"${styles.recipeCard_nutrientInfoLine}\"><p>Fat:</p> <p>${fatAmount}</p></div>\n  <div class=\"${styles.recipeCard_nutrientInfoLine}\"><p>Carbohydrates:</p> <p>${carbohydratesAmount}</p></div>\n  </div>`;\n}\n","import styles from '../../style.css';\nimport { getPreparedRecipeCardData, RecipeCard } from './RecipeCard';\n\nexport default function DailyMealPlan() {\n  const { dailyMealPlan, detailedMealPlanRecipes } = window.dataStore;\n  let content = '';\n  let contentDescription = '';\n  if (dailyMealPlan) {\n    const {\n      meals,\n      nutrients: { calories, protein, fat, carbohydrates },\n    } = dailyMealPlan;\n    contentDescription = `<h3>Meal Description</h3><div>\n    <p>Here is your daily meal plan: breakfast, lunch and dinner.</p>\n    <p>Enjoy it!</p>\n    <p>Calories: ${calories}</p>\n    <p>Protein: ${protein}</p>\n    <p>Fat: ${fat}</p>\n    <p>Carbohydrates: ${carbohydrates}</p></div>`;\n  }\n\n  if (detailedMealPlanRecipes.length) {\n    const recipeCards = window.dataStore.detailedMealPlanRecipes.map(detailedRecipeCardData => {\n      const preparedRecipeCardData = getPreparedRecipeCardData(detailedRecipeCardData);\n      return RecipeCard(preparedRecipeCardData);\n    });\n    content = recipeCards.join('');\n  }\n\n  return `<div class=\"${styles.recipesContainer}\"><div class=\"${styles.mealDescription}\">${contentDescription}</div><div class=\"${styles.recipeCardsContainer}\">${content}</div></div>`;\n}\n","import styles from '../../style.css';\nimport SetGoal from './SetGoal';\nimport DailyMealPlan from './DailyMealPlan';\n\nexport default function GetMealPlanByGoal() {\n  return `<div class=\"${styles.getMealPlanByGoal}\">\n    ${SetGoal()}\n    ${DailyMealPlan()}\n  </div>`;\n}\n","import styles from '../../style.css';\n\nwindow.FillFridgeOnChangeCB = FillFridgeOnChangeCB;\n\nfunction FillFridgeOnChangeCB(value) {\n  const { magicFridgeItems } = window.dataStore;\n\n  if (magicFridgeItems.length < 5) {\n    magicFridgeItems.push(value);\n    value = '';\n    window.renderApp();\n  } else {\n    alert('5 ingredients are maximum');\n  }\n}\n\nexport default function AddFridgeIngredients() {\n  return `<div>\n      <h2>What's in your fridge?</h2>\n      <p class=\"${styles.getRecipeByIngredientsHeader_p}\">Enter up to 5 products you have in the fridge to cook the best meal. Example: apple, milk, sugar. </p>\n      <input \n        type=\"text\" \n        placeholder=\"what is in your fridge?\" \n        onchange=\"window.FillFridgeOnChangeCB(this.value)\"\n      >\n      <button type=\"submit\">+add</button>\n      \n  </div>`;\n}\n","import styles from '../../style.css';\n\nwindow.removeFridgeItem = removeFridgeItem;\n\nfunction removeFridgeItem(id) {\n  window.dataStore.magicFridgeItems = window.dataStore.magicFridgeItems.filter(item => item !== id);\n  window.renderApp();\n}\n\nexport function FridgeItem(fridgeItemData) {\n  return `<div class=\"${styles.fridgeItemContainer}\">\n  <button class=\"${styles.fridgeItemContainer_button}\" id=\"${fridgeItemData}\" onclick=\"window.removeFridgeItem(this.id);\">x</button>\n  <label class=\"${styles.fridgeItemContainer_label}\" for=\"${fridgeItemData}\">${fridgeItemData}</label>\n  </div>`;\n}\n","import styles from '../../style.css';\nimport { FridgeItem } from './FridgeItem';\nimport { loadMagicFridgeRecipes, loadDetailedRecipesInfo } from '../data/spoonacularAPI';\n\nwindow.magicButtonCB = magicButtonCB;\n\nfunction magicButtonCB() {\n  let promise = loadMagicFridgeRecipes();\n  promise.then(data => loadDetailedRecipesInfo({ results: data }, 'detailedMagicFridgeRecipes'));\n}\n\nexport default function FridgeIngredients() {\n  let content = '';\n  let confirmButton = '';\n  if (window.dataStore.magicFridgeItems.length > 0) {\n    confirmButton = `<button class=\"${styles.fridgeIngredientsListContainer_magicButton}\" onclick=\"window.magicButtonCB()\" >Magic</button>`;\n  }\n  content = `${window.dataStore.magicFridgeItems\n    .map(fridgeItemData => FridgeItem(fridgeItemData))\n    .join('')}`;\n  return `<div class=\"${styles.fridgeIngredientsListContainer}\"><div class=\"${styles.fridgeIngredientsListContainer_inner}\">${content}</div>${confirmButton}</div>`;\n}\n","import styles from '../../style.css';\nimport AddFridgeIngredients from './AddFridgeIngredients';\nimport FridgeIngredients from './FridgeIngredients';\n\nexport default function FillFridge() {\n  return `<div class=\"${styles.getRecipeByIngredientsHeader}\">\n    ${AddFridgeIngredients()}\n    ${FridgeIngredients()}\n  </div>`;\n}\n","import styles from '../../style.css';\nimport { getPreparedRecipeCardData, RecipeCard } from './RecipeCard';\n\nexport default function FridgeRecipes() {\n  const { isMagicFridge, detailedMagicFridgeRecipes, errorInTheFridge } = window.dataStore;\n  let content = '';\n  let contentDescription = '';\n  if (errorInTheFridge) {\n    contentDescription = `<div>Please add at least one valid ingredient.</div>`;\n    return `<div>${contentDescription}</div>`;\n  }\n  if (isMagicFridge) {\n    contentDescription = `<h3>Here we go!</h3><p>We have tried to select the best fitting recipes based on your fridge ingredients. Some ingredients may be missing so your imagination can help you how to change them and cook the best meal ever!</p>`;\n  }\n  if (detailedMagicFridgeRecipes.length) {\n    const recipeCards = window.dataStore.detailedMagicFridgeRecipes.map(detailedRecipeCardData => {\n      const preparedRecipeCardData = getPreparedRecipeCardData(detailedRecipeCardData);\n      return RecipeCard(preparedRecipeCardData);\n    });\n    content = recipeCards.join('');\n  }\n  return `<div><div class=\"${styles.mealDescription}\">${contentDescription}</div><div class=\"${styles.recipeCardsContainer}\">${content}</div></div>`;\n}\n","import styles from '../../style.css';\nimport FillFridge from './FillFridge';\nimport FridgeRecipes from './FridgeRecipes';\n\nexport default function GetRecipeByIngredients() {\n  return `<div class=\"${styles.getRecipeByIngredientsContainer}\">\n    ${FillFridge()}\n    ${FridgeRecipes()}\n  </div>`;\n}\n","import styles from '../../style.css';\n\nexport default function SearchRecipes() {\n  const { searchedRecipe } = window.dataStore;\n  return `<div class=\"${styles.searchForRecipeByNameContainer_header}\">\n    <h2>Search by recipe name</h2>\n    <input \n      type=\"text\" \n      value=\"${searchedRecipe}\" \n      placeholder=\"enter recipe (ex: rice)\" \n      onchange=\"performSearchRecipes(this.value)\"\n    />\n  </div>`;\n}\n","import { RecipeCard, getPreparedRecipeCardData } from './RecipeCard';\nimport { isCurrentRecipeInCache } from '../utils';\nimport styles from '../../style.css';\n\nexport default function SearchByNameRecipes() {\n  const {\n    searchedRecipe,\n    isDataLoading,\n    error,\n    detailedSearchedRecipes,\n    recipesInCache,\n  } = window.dataStore;\n  let content = '';\n\n  //initial state\n  if (searchedRecipe === '') {\n    content = 'Please enter recipe name.';\n  } else {\n    //loading state\n    if (isDataLoading) {\n      content = 'Loading...';\n    }\n    //error state\n    if (error) {\n      content = error;\n    }\n    //results state\n    if (isCurrentRecipeInCache()) {\n      const recipeCards = window.dataStore.detailedSearchedRecipes.map(detailedRecipeCardData => {\n        const preparedRecipeCardData = getPreparedRecipeCardData(detailedRecipeCardData);\n        return RecipeCard(preparedRecipeCardData);\n      });\n      content = recipeCards.join('');\n    }\n  }\n  return `<div class=\"${styles.recipeCardsContainer}\">${content}</div>`;\n}\n","import styles from '../../style.css';\nimport SearchRecipes from './SearchRecipes';\nimport SearchByNameRecipes from './SearchByNameRecipes';\n\nexport default function SearchForRecipesByName() {\n  return `<div class=\"${styles.searchForRecipeByNameContainer}\">\n    ${SearchRecipes()}\n    ${SearchByNameRecipes()}\n  </div>`;\n}\n","import GetMealPlanByGoal from './GetMealPlanByGoal';\nimport GetRecipeByIngredients from './GetRecipeByIngredients';\nimport SearchForRecipesByName from './SearchForRecipesByName';\nimport { RenderModalRecipe } from './ModalRecipe';\nimport styles from '../../style.css';\n\nexport default function App() {\n  return `<div class=\"${styles.appContainer}\" >\n    <header class=\"${styles.header}\"><h1>YummySpoon</h1></header>\n    ${GetMealPlanByGoal()}\n    ${GetRecipeByIngredients()}\n    ${SearchForRecipesByName()}\n    ${window.dataStore.isModalRecipeOpened ? RenderModalRecipe() : null}\n  </div>`;\n}\n","// Start from here\nimport dataStore from './data/dataStore';\nimport { performSearchRecipes, validateAndLoadData, getDailyMealPlan } from './data/spoonacularAPI';\nimport { openModalRecipe } from './components/ModalRecipe';\nimport renderApp from './framework/render';\nimport App from './components/App';\n\nwindow.dataStore = dataStore;\nwindow.renderApp = renderApp;\n// window.FillFridgeOnChangeCB = FillFridgeOnChangeCB;\n// window.magicButtonCB = magicButtonCB;\nwindow.performSearchRecipes = performSearchRecipes;\nwindow.validateAndLoadData = validateAndLoadData;\nwindow.getDailyMealPlan = getDailyMealPlan;\nwindow.openModalRecipe = openModalRecipe;\nwindow.removeFridgeItem = removeFridgeItem;\n\nif (module.hot) {\n  module.hot.accept();\n}\n\nrenderApp(App, 'app-root');\n"]}