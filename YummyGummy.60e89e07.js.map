{"version":3,"sources":["utils.js","index.js"],"names":["getSearchRecipeUrl","searchedWord","getUrlOfDetailedRecipe","id","appRoot","document","getElementById","getNutrientAmount","nutrientName","arrayOfAllNutrients","searchedNutrient","find","nutrient","name","amount","calculateMaxCalories","currentGoal","usersWeight","caloriesAmount","parseInt","GetMealPlanByGoal","styles","getMealPlanByGoal","SetGoal","RenderDailyMealPlan","GetRecipeByIngredients","getRecipeByIngredientsContainer","FillFridge","RenderFridgeIngredients","RenderFridgeRecipes","SearchForRecipesByName","searchForRecipeByNameContainer","SearchRecipes","RenderRecipes","setCurrentGoal","value","window","dataStore","renderApp","GoalSwitch","goal","map","join","getDailyMealPlan","loadDailyMealPlan","then","meals","nutrients","loadDetailedRecipesInfo","results","maxCalories","fetch","method","headers","response","json","data","dailyMealPlan","catch","err","finally","detailedMealPlanRecipes","content","calories","protein","fat","carbohydrates","title","length","image","readyInMinutes","instructions","nutrition","fatAmount","carbohydratesAmount","proteinAmount","RenderDailyMealPlanContainer","FillFridgeOnChangeCB","magicFridgeItems","push","alert","loadMagicFridgeRecipes","ingredientsArray","ingredientsQueryString","reduce","final","current","concat","magicFridgeRecipes","confirmButtonCB","isMagicFridge","confirmButton","fridgeItem","magicFridgeDetailedRecipes","cardContent","isCurrentRecipeInCache","recipesInCache","searchedRecipe","Boolean","whereToLoad","requests","result","url","Promise","all","responses","r","error","validateAndLoadData","resolve","performSearchRecipes","recipeName","isDataLoading","detailedRecipesInfo","innerHTML","App","appContainer","header","module","hot","accept"],"mappings":"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","file":"YummyGummy.60e89e07.js","sourceRoot":"..","sourcesContent":["export function getSearchRecipeUrl(searchedWord) {\n  return `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/search?query=${searchedWord}&number=5`;\n}\n\nexport function getUrlOfDetailedRecipe(id) {\n  return `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/${id}/information?includeNutrition=true`;\n}\n","// Start from here\nimport { getSearchRecipeUrl, getUrlOfDetailedRecipe } from './utils';\nimport styles from './style';\n\nconst appRoot = document.getElementById('app-root');\n\nwindow.renderApp = renderApp;\nwindow.FillFridgeOnChangeCB = FillFridgeOnChangeCB;\nwindow.confirmButtonCB = confirmButtonCB;\nwindow.performSearchRecipes = performSearchRecipes;\nwindow.validateAndLoadData = validateAndLoadData;\nwindow.getDailyMealPlan = getDailyMealPlan;\n\nwindow.dataStore = {\n  recipesInCache: [],\n  currentGoal: 'lose',\n  magicFridgeItems: [],\n  usersWeight: '22',\n  searchedRecipe: '',\n  detailedRecipesInfo: [],\n  detailedMealPlanRecipes: [],\n  magicFridgeRecipes: [],\n  magicFridgeDetailedRecipes: [],\n  isMagicFridge: false,\n  isDataLoading: false,\n  error: null,\n  dailyMealPlan: '',\n};\n\nif (module.hot) {\n  module.hot.accept();\n}\n\nfunction getNutrientAmount(nutrientName, arrayOfAllNutrients) {\n  let searchedNutrient = arrayOfAllNutrients.find(nutrient => nutrient.name === nutrientName);\n  return searchedNutrient.amount;\n}\n\nfunction calculateMaxCalories(currentGoal, usersWeight) {\n  usersWeight = parseInt(usersWeight);\n  let caloriesAmount;\n\n  if (currentGoal === 'lose') {\n    if (usersWeight <= 50) {\n      caloriesAmount = usersWeight * 10 + 1200 - 200;\n    } else if (usersWeight > 50 && usersWeight <= 80) {\n      caloriesAmount = usersWeight * 10 + 1400 - 200;\n    } else if (usersWeight > 80 && usersWeight <= 110) {\n      caloriesAmount = usersWeight * 10 + 1600 - 200;\n    } else {\n      caloriesAmount = usersWeight * 10 + 1800 - 200;\n    }\n  } else {\n    if (usersWeight <= 50) {\n      caloriesAmount = usersWeight * 10 + 1200;\n    } else if (usersWeight > 50 && usersWeight <= 80) {\n      caloriesAmount = usersWeight * 10 + 1400;\n    } else if (usersWeight > 80 && usersWeight <= 110) {\n      caloriesAmount = usersWeight * 10 + 1600;\n    } else {\n      caloriesAmount = usersWeight * 10 + 1800;\n    }\n  }\n  return caloriesAmount;\n}\n\nfunction GetMealPlanByGoal() {\n  return `<div class=\"${styles.getMealPlanByGoal}\">\n    ${SetGoal()}\n    ${RenderDailyMealPlan()}\n  </div>`;\n}\n\nfunction GetRecipeByIngredients() {\n  return `<div class=\"${styles.getRecipeByIngredientsContainer}\">\n    ${FillFridge()}\n    ${RenderFridgeIngredients()}\n    ${RenderFridgeRecipes()}\n  </div>`;\n}\n\nfunction SearchForRecipesByName() {\n  return `<div class=\"${styles.searchForRecipeByNameContainer}\">\n    ${SearchRecipes()}\n    ${RenderRecipes()}\n  </div>`;\n}\n\nfunction setCurrentGoal(value) {\n  window.dataStore.currentGoal = value;\n  window.renderApp();\n}\n\nfunction GoalSwitch(currentGoal, setCurrentGoal) {\n  return `\n    ${[\n      { id: 'goalGain', goal: 'gain' },\n      { id: 'goalLose', goal: 'lose' },\n    ]\n      .map(\n        ({ goal, id }) => `\n      <input \n        id=\"${id}\" \n        type=\"radio\" \n        value=\"${goal}\"\n        ${currentGoal === goal ? 'checked' : ''}\n        onchange=\"(${setCurrentGoal})(this.value);\"\n       />\n      <label for=\"${id}\">${goal}</label>  \n    `,\n      )\n      .join('')}`;\n}\n\nfunction SetGoal() {\n  const { currentGoal, usersWeight } = window.dataStore;\n  return `<div>\n    <h2>Do you want to lose or to gain weight?</h2>\n    ${GoalSwitch(currentGoal, setCurrentGoal)}\n    <p>In case you want to lose weight, we're going to create a meal plan with a decreased amount of carbs.</p>\n    <p>If your goal is to gain muscles - we're going to include more high protein dishes.\n    <h4>What's your weight?</h4>\n    <input type=\"number\" value=\"${usersWeight}\" placeholder=\"your weight\" onchange=\"window.dataStore.usersWeight = this.value; window.renderApp();\">\n    <button onclick=\"window.getDailyMealPlan()\">Submit</button>\n  </div>`;\n}\n\nfunction getDailyMealPlan() {\n  let promise = loadDailyMealPlan();\n  promise.then(({ meals, nutrients }) => {\n    loadDetailedRecipesInfo({ results: meals }, 'detailedMealPlanRecipes');\n  });\n}\n\nfunction loadDailyMealPlan() {\n  const { currentGoal, usersWeight } = window.dataStore;\n\n  const maxCalories = calculateMaxCalories(currentGoal, usersWeight);\n\n  return fetch(\n    `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/mealplans/generate?timeFrame=day&targetCalories=${maxCalories}`,\n    {\n      method: 'GET',\n      headers: {\n        'x-rapidapi-key': '46c316dbf2msh22acfa650b43ca2p1df703jsnc4386fc8ea30',\n        'x-rapidapi-host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',\n      },\n    },\n  )\n    .then(response => response.json())\n    .then(data => {\n      window.dataStore.dailyMealPlan = data;\n      return data;\n    })\n    .catch(err => {\n      window.dataStore.err = err;\n    })\n    .finally(window.renderApp);\n}\n\nfunction RenderDailyMealPlan() {\n  const { dailyMealPlan, detailedMealPlanRecipes } = window.dataStore;\n  let content = 'Please set your goal.';\n  if (dailyMealPlan) {\n    const {\n      meals,\n      nutrients: { calories, protein, fat, carbohydrates },\n    } = dailyMealPlan;\n    content = meals\n      .map(({ id, title }) => `<div><div>${id}</div><div>${title}</div></div>`)\n      .join('');\n    content += `<div><p>Calories: ${calories}</p><p>protein: ${protein}</p><p>fat: ${fat}</p><p>carbohydrates: ${carbohydrates}</p></div>`;\n  }\n  if (detailedMealPlanRecipes.length) {\n    content = `${window.dataStore.detailedMealPlanRecipes\n      .map(({ title, image, instructions, readyInMinutes, nutrition: { nutrients } }) => {\n        const caloriesAmount = getNutrientAmount('Calories', nutrients);\n        const fatAmount = getNutrientAmount('Fat', nutrients);\n        const carbohydratesAmount = getNutrientAmount('Carbohydrates', nutrients);\n        const proteinAmount = getNutrientAmount('Protein', nutrients);\n        let content = `<div><h1>${title}</h1>\n        <image src=\"${image}\" alt=\"${title}\"/>\n        <p>Ready in ${readyInMinutes} minutes.</p>\n        <p>Calories: ${caloriesAmount}</p>\n        <p>Protein: ${proteinAmount}</p>\n        <p>Fat: ${fatAmount}</p>\n        <p>Carbohydrates: ${carbohydratesAmount}</p>\n        </div></div>`;\n        return content;\n      })\n      .join('')}`;\n  }\n\n  return `<div class=\"${styles.RenderDailyMealPlanContainer}\">${content}</div>`;\n}\n\nfunction FillFridgeOnChangeCB(value) {\n  const { magicFridgeItems } = window.dataStore;\n\n  if (magicFridgeItems.length < 5) {\n    magicFridgeItems.push(value);\n    value = '';\n    window.renderApp();\n  } else {\n    alert('5 ingredients are maximum');\n  }\n}\n\nfunction FillFridge() {\n  return `<div>\n      <h2>What's in your fridge?</h2>\n      <p>Enter up to 5 products you have in the fridge to cook the best meal. Example: apple, milk, sugar. </p>\n      <input \n        type=\"text\" \n        placeholder=\"what is in your fridge?\" \n        onchange=\"window.FillFridgeOnChangeCB(this.value)\"\n      >\n      <button type=\"submit\">+add</button>\n      \n  </div>`;\n}\n\nfunction loadMagicFridgeRecipes() {\n  const ingredientsArray = window.dataStore.magicFridgeItems;\n  let ingredientsQueryString = ingredientsArray.reduce(\n    (final, current) => final.concat(current + '%2C'),\n    '',\n  );\n  return fetch(\n    `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/findByIngredients?ingredients=${ingredientsQueryString}&number=3&ignorePantry=false&ranking=1`,\n    {\n      method: 'GET',\n      headers: {\n        'x-rapidapi-key': '46c316dbf2msh22acfa650b43ca2p1df703jsnc4386fc8ea30',\n        'x-rapidapi-host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',\n      },\n    },\n  )\n    .then(response => response.json())\n    .then(data => {\n      window.dataStore.magicFridgeRecipes = data;\n      return data;\n    })\n    .catch(err => {\n      window.dataStore.err = err;\n    })\n    .finally(window.renderApp);\n}\n\nfunction confirmButtonCB() {\n  window.dataStore.isMagicFridge = true;\n  let promise = loadMagicFridgeRecipes();\n  promise.then(data => loadDetailedRecipesInfo({ results: data }, 'magicFridgeDetailedRecipes'));\n  window.renderApp();\n}\n\nfunction RenderFridgeIngredients() {\n  let confirmButton = '';\n  if (window.dataStore.magicFridgeItems.length > 0) {\n    confirmButton = `<button onclick=\"window.confirmButtonCB()\" >Magic time!</button>`;\n  }\n  return `${window.dataStore.magicFridgeItems\n    .map(\n      fridgeItem => `<div>\n  ${fridgeItem}\n  </div>`,\n    )\n    .join('')}\n    ${confirmButton}`;\n}\n\nfunction RenderFridgeRecipes() {\n  const { isMagicFridge, magicFridgeRecipes, magicFridgeDetailedRecipes } = window.dataStore;\n  let content = '';\n  if (isMagicFridge) {\n    content = `\n      ${magicFridgeRecipes\n        .map(\n          ({ title, image }) =>\n            `<div class=\"magicFridgeRecipe\"><p>${title}</p><img src=\"${image}\" alt=\"oops\"></div>`,\n        )\n        .join('')}\n    `;\n  }\n  if (magicFridgeDetailedRecipes.length) {\n    content = `${magicFridgeDetailedRecipes\n      .map(({ title, image, instructions, readyInMinutes, nutrition: { nutrients } }) => {\n        const caloriesAmount = getNutrientAmount('Calories', nutrients);\n        const fatAmount = getNutrientAmount('Fat', nutrients);\n        const carbohydratesAmount = getNutrientAmount('Carbohydrates', nutrients);\n        const proteinAmount = getNutrientAmount('Protein', nutrients);\n        let cardContent = `<div><h1>${title}</h1>\n        <image src=\"${image}\" alt=\"${title}\"/>\n        <p>Calories: ${caloriesAmount}</p>\n        <p>Protein: ${proteinAmount}</p>\n        <p>Fat: ${fatAmount}</p>\n        <p>Carbohydrates: ${carbohydratesAmount}</p>\n        </div></div>`;\n        return cardContent;\n      })\n      .join('')}`;\n  }\n  return `<div class=\"aaa\">${content}</div>`;\n}\n\nfunction isCurrentRecipeInCache() {\n  const { recipesInCache, searchedRecipe } = window.dataStore;\n  return Boolean(recipesInCache[searchedRecipe]);\n}\n\nfunction loadDetailedRecipesInfo({ results }, whereToLoad) {\n  const urlsOfDetailedRecipes = results.map(result => getUrlOfDetailedRecipe(result.id));\n  let requests = urlsOfDetailedRecipes.map(url =>\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        'x-rapidapi-key': `${process.env.YUMMY_SPOON_API_KEY}`,\n        'x-rapidapi-host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',\n      },\n    }),\n  );\n  return Promise.all(requests)\n    .then(responses => Promise.all(responses.map(r => r.json())))\n    .then(data => {\n      window.dataStore[whereToLoad] = data;\n    })\n    .catch(error => {\n      window.dataStore.error = 'Error inside loadDetailedRecipesInfo';\n    })\n    .finally(window.renderApp);\n}\n\nfunction validateAndLoadData() {\n  const { searchedRecipe } = window.dataStore;\n  const url = getSearchRecipeUrl(searchedRecipe);\n\n  if (!isCurrentRecipeInCache()) {\n    return fetch(url, {\n      method: 'GET',\n      headers: {\n        'x-rapidapi-key': `${process.env.YUMMY_SPOON_API_KEY}`,\n        'x-rapidapi-host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',\n      },\n    })\n      .then(response => response.json())\n      .then(data => ({ data }));\n  }\n  return Promise.resolve({});\n}\n\nfunction performSearchRecipes(recipeName) {\n  window.dataStore.searchedRecipe = recipeName;\n  window.dataStore.error = null;\n  window.dataStore.isDataLoading = true;\n\n  window\n    .validateAndLoadData()\n    .then(({ error, data }) => {\n      window.dataStore.isDataLoading = false;\n      if (error) {\n        window.dataStore.error = error;\n      } else if (data) {\n        window.dataStore.recipesInCache[recipeName] = data;\n        loadDetailedRecipesInfo(data, 'detailedRecipesInfo');\n      }\n    })\n    .catch(err => {\n      window.dataStore.error = `Some error occurred ${err}`;\n    })\n    .finally(window.renderApp);\n}\n\nfunction SearchRecipes() {\n  const { searchedRecipe } = window.dataStore;\n  return `<div>\n    <h2>Search by recipe name</h2>\n    <input \n      type=\"text\" \n      value=\"${searchedRecipe}\" \n      placeholder=\"enter recipe (ex: rice)\" \n      onchange=\"performSearchRecipes(this.value)\"\n    />\n  </div>`;\n}\n\nfunction RenderRecipes() {\n  const {\n    searchedRecipe,\n    isDataLoading,\n    error,\n    detailedRecipesInfo,\n    recipesInCache,\n  } = window.dataStore;\n  let content = '';\n\n  //initial state\n  if (searchedRecipe === '') {\n    content = 'Please enter recipe name.';\n  } else {\n    //loading state\n    if (isDataLoading) {\n      content = 'Loading...';\n    }\n    //error state\n    if (error) {\n      content = error;\n    }\n    //results state\n    if (isCurrentRecipeInCache()) {\n      content = `${window.dataStore.detailedRecipesInfo\n        .map(({ title, image, instructions, readyInMinutes, nutrition: { nutrients } }) => {\n          const caloriesAmount = getNutrientAmount('Calories', nutrients);\n          const fatAmount = getNutrientAmount('Fat', nutrients);\n          const carbohydratesAmount = getNutrientAmount('Carbohydrates', nutrients);\n          const proteinAmount = getNutrientAmount('Protein', nutrients);\n          let cardContent = `<div><h1>${title}</h1>\n          <image src=\"${image}\" alt=\"${title}\"/>\n          <p>Calories: ${caloriesAmount}</p>\n          <p>Protein: ${proteinAmount}</p>\n          <p>Fat: ${fatAmount}</p>\n          <p>Carbohydrates: ${carbohydratesAmount}</p>\n          </div></div>`;\n          return cardContent;\n        })\n        .join('')}`;\n    }\n  }\n  return `<div>${content}</div>`;\n}\n\nfunction renderApp() {\n  appRoot.innerHTML = App();\n}\n\nfunction App() {\n  return `<div class=\"${styles.appContainer}\" >\n    <header class=\"${styles.header}\"><h1>YummySpoon</h1></header>\n    ${GetMealPlanByGoal()}\n    ${GetRecipeByIngredients()}\n    ${SearchForRecipesByName()}\n  </div>`;\n}\n\nrenderApp();\n"]}