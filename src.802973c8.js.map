{"version":3,"sources":["data/dataStore.js","framework/element.js","framework/render.js","utils.js","data/spoonacularAPI.js","components/GoalSwitch/GoalSwitch.js","components/GoalSwitch/index.js","components/SetGoal/SetGoal.js","components/SetGoal/index.js","components/ModalRecipe/ModalRecipe.js","components/RecipeCard/RecipeCard.js","components/RecipeCard/index.js","components/ModalRecipe/index.js","components/DailyMealPlan/DailyMealPlan.js","components/GetMealPlanByGoal/GetMealPlanByGoal.js","components/GetMealPlanByGoal/index.js","components/AddFridgeIngredients/AddFridgeIngredients.js","components/AddFridgeIngredients/index.js","components/FridgeItem/FridgeItem.js","components/FridgeIngredients/FridgeIngredients.js","components/FillFridge/FillFridge.js","components/FillFridge/index.js","components/FridgeRecipes/FridgeRecipes.js","components/FridgeRecipes/index.js","components/GetRecipeByIngredients/GetRecipeByIngredients.js","components/GetRecipeByIngredients/index.js","components/SearchRecipes/SearchRecipes.js","components/SearchRecipes/index.js","components/SearchByNameRecipes/SearchByNameRecipes.js","components/SearchByNameRecipes/index.js","components/SearchForRecipesByName/SearchForRecipesByName.js","components/SearchForRecipesByName/index.js","components/App/App.js","components/App/index.js","index.js"],"names":["dataStore","currentGoal","usersWeight","magicFridgeItems","searchedRecipe","recipesInCache","detailedMealPlanRecipes","detailedMagicFridgeRecipes","detailedSearchedRecipes","isMagicFridge","isDataLoading","error","errorInTheFridge","dailyMealPlan","isModalRecipeOpened","modalRecipeData","createElement","tag","props","children","element","DocumentFragment","document","Object","entries","forEach","name","value","startsWith","toLowerCase","window","addEventListener","substr","includes","removeAttribute","setAttribute","e","console","child","appendChild","parent","Array","isArray","subChild","nodeType","createTextNode","toString","createFragment","Component","Target","renderApp","functionalComponent","targetElement","innerHTML","getNutrientAmount","nutrientName","arrayOfAllNutrients","searchedNutrient","find","nutrient","amount","calculateMaxCalories","caloriesAmount","parseInt","isCurrentRecipeInCache","Boolean","getSearchRecipeUrl","searchedWord","getUrlOfDetailedRecipe","id","getRapidAPIFetchOptionsData","method","headers","getDailyMealPlan","loadDailyMealPlan","then","meals","nutrients","loadDetailedRecipesInfo","results","maxCalories","fetch","response","ok","json","Error","status","data","catch","err","finally","loadMagicFridgeRecipes","ingredientsArray","ingredientsQueryString","reduce","final","current","concat","length","whereToLoad","requests","map","result","url","Promise","all","responses","r","validateAndLoadData","resolve","performSearchRecipes","recipeName","GoalSwitch","setCurrentGoal","goal","event","target","handleWeightChange","SetGoal","getMealPlanByGoalHeader","getMealPlanByGoalHeader_h2","getMealPlanByGoalHeader_p","getModalRecipeData","targetId","openModalRecipe","closeModalRecipe","getPreparedModalRecipeData","image","instructions","nutrition","readyInMinutes","title","fatAmount","carbohydratesAmount","proteinAmount","CreateModalRecipeWindow","modalRecipeContainer","modalRecipeContainerInner","modalRecipeContainer_image","modalRecipeContainer_nutrientsContainer","recipeCard_nutrientInfoLine","modalRecipeContainer_instructions","ModalRecipe","content","getPreparedRecipeCardData","RecipeCard","recipeCard","recipeCard_image","clickOnRecipeContainerCB","card","closest","DailyMealPlan","contentDescription","calories","protein","fat","carbohydrates","detailedRecipeCardData","preparedRecipeCardData","recipesContainer","mealDescription","recipeCardsContainer","GetMealPlanByGoal","getMealPlanByGoal","FillFridgeOnChangeCB","push","alert","AddFridgeIngredients","styles","getRecipeByIngredientsHeader_p","FridgeItem","fridgeItemData","fridgeItemContainer","fridgeItemContainer_button","fridgeItemContainer_label","removeFridgeItem","item","filter","magicButton","FridgeIngredients","confirmButton","fridgeIngredientsListContainer_magicButton","fridgeIngredientsListContainer","fridgeIngredientsListContainer_inner","FillFridge","getRecipeByIngredientsHeader","findElementAndOpenModal","FridgeRecipes","GetRecipeByIngredients","getRecipeByIngredientsContainer","SearchRecipes","searchForRecipeByNameContainer_header","SearchByNameRecipes","SearchForRecipesByName","searchForRecipeByNameContainer","App","appContainer","header","module","hot","accept","getElementById"],"mappings":"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","file":"src.802973c8.js","sourceRoot":"../src","sourcesContent":["const dataStore = {\n  currentGoal: 'gain',\n  usersWeight: '42',\n  magicFridgeItems: [],\n  searchedRecipe: '',\n  recipesInCache: [],\n  detailedMealPlanRecipes: [],\n  detailedMagicFridgeRecipes: [],\n  detailedSearchedRecipes: [],\n  isMagicFridge: false,\n  isDataLoading: false,\n  error: null,\n  errorInTheFridge: null,\n  dailyMealPlan: '',\n  isModalRecipeOpened: false,\n  modalRecipeData: '',\n};\n\nexport default dataStore;\n","/**\n * Creates DOM Node. Implements jsx-parser's createElement API\n * @param {string|Function} tag - HTML tag as string or Component function\n * @param {object} props - element properties as parsed by jsx-parser\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment|Element}\n */\nexport const createElement = (tag, props, ...children) => {\n  if (typeof tag === 'function') {\n    /*\n      Passing children as the 2nd argument is required as jsx transformer puts component functions\n      and regular tags in wrapper functions that expect children as the 2nd param\n     */\n    return tag({ ...props, children }, children);\n  }\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\n  Object.entries(props || {}).forEach(([name, value]) => {\n    if (name.startsWith('on') && name.toLowerCase() in window) {\n      element.addEventListener(\n        name.toLowerCase().substr(2),\n        /** @type {Function} */\n        value,\n      );\n    } else {\n      try {\n        if (!(element instanceof DocumentFragment)) {\n          // Boolean attributes are considered to be true if they're present on the element at all, regardless of their actual value\n          // https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#example\n          if (['disabled', 'checked'].includes(name) && !value) {\n            element.removeAttribute(name);\n          } else {\n            element.setAttribute(name, value);\n          }\n        }\n      } catch (e) {\n        console.error('createElement caught', e, 'on', element);\n      }\n    }\n  });\n\n  children.forEach(child => appendChild(element, child));\n\n  return element;\n};\n\n/**\n * Appends child elements from an unbound array of children, recursively\n * @param {Node} parent\n * @param {Node|[Node]} child\n */\nconst appendChild = (parent, child) => {\n  if (Array.isArray(child)) {\n    child.forEach(subChild => appendChild(parent, subChild));\n  } else {\n    // Skip null and undefined\n    if (child != null) {\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\n    }\n  }\n};\n\n/**\n * Creates Fragment. Implements jsx-parser's createFragment API\n * @param {object} props - effectively a placeholder, fragment never has any properties\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment}\n */\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from './element';\nlet Component, Target;\n\nexport default function renderApp(functionalComponent = null, targetElement = null) {\n  if (functionalComponent) Component = functionalComponent;\n  if (targetElement) Target = targetElement;\n  Target.innerHTML = '';\n  Target.appendChild(<Component />);\n}\n","export function getNutrientAmount(nutrientName, arrayOfAllNutrients) {\n  let searchedNutrient = arrayOfAllNutrients.find(nutrient => nutrient.name === nutrientName);\n  return searchedNutrient.amount;\n}\n\nexport function calculateMaxCalories(currentGoal, usersWeight) {\n  usersWeight = parseInt(usersWeight);\n  let caloriesAmount;\n\n  if (currentGoal === 'lose') {\n    if (usersWeight <= 50) {\n      caloriesAmount = usersWeight * 10 + 1200 - 200;\n    } else if (usersWeight > 50 && usersWeight <= 80) {\n      caloriesAmount = usersWeight * 10 + 1400 - 200;\n    } else if (usersWeight > 80 && usersWeight <= 110) {\n      caloriesAmount = usersWeight * 10 + 1600 - 200;\n    } else {\n      caloriesAmount = usersWeight * 10 + 1800 - 200;\n    }\n  } else {\n    if (usersWeight <= 50) {\n      caloriesAmount = usersWeight * 10 + 1200;\n    } else if (usersWeight > 50 && usersWeight <= 80) {\n      caloriesAmount = usersWeight * 10 + 1400;\n    } else if (usersWeight > 80 && usersWeight <= 110) {\n      caloriesAmount = usersWeight * 10 + 1600;\n    } else {\n      caloriesAmount = usersWeight * 10 + 1800;\n    }\n  }\n  return caloriesAmount;\n}\n\nexport function isCurrentRecipeInCache() {\n  const { recipesInCache, searchedRecipe } = window.dataStore;\n  return Boolean(recipesInCache[searchedRecipe]);\n}\n","import { calculateMaxCalories, isCurrentRecipeInCache } from '../utils';\nimport renderApp from '../framework/render';\n\nexport function getSearchRecipeUrl(searchedWord) {\n  return `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/search?query=${searchedWord}&number=5`;\n}\n\nexport function getUrlOfDetailedRecipe(id) {\n  return `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/${id}/information?includeNutrition=true`;\n}\n\nexport function getRapidAPIFetchOptionsData() {\n  return {\n    method: 'GET',\n    headers: {\n      'x-rapidapi-key': `${process.env.rapidApiKey}`,\n      'x-rapidapi-host': 'spoonacular-recipe-food-nutrition-v1.p.rapidapi.com',\n    },\n  };\n}\n\nexport function getDailyMealPlan() {\n  let promise = loadDailyMealPlan();\n  promise.then(({ meals, nutrients }) => {\n    loadDetailedRecipesInfo({ results: meals }, 'detailedMealPlanRecipes');\n  });\n}\n\nexport function loadDailyMealPlan() {\n  const { currentGoal, usersWeight } = window.dataStore;\n  const maxCalories = calculateMaxCalories(currentGoal, usersWeight);\n\n  return fetch(\n    `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/mealplans/generate?timeFrame=day&targetCalories=${maxCalories}`,\n    getRapidAPIFetchOptionsData(),\n  )\n    .then(response => {\n      if (response.ok) return response.json();\n      throw new Error(`Error` + response.status + response.json);\n    })\n    .then(data => {\n      window.dataStore.dailyMealPlan = data;\n      return data;\n    })\n    .catch(err => {\n      window.dataStore.err = err;\n    })\n    .finally(renderApp);\n}\n\nexport function loadMagicFridgeRecipes() {\n  const ingredientsArray = window.dataStore.magicFridgeItems;\n  let ingredientsQueryString = ingredientsArray.reduce(\n    (final, current) => final.concat(current + '%2C'),\n    '',\n  );\n  return fetch(\n    `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/findByIngredients?ingredients=${ingredientsQueryString}&number=4&ignorePantry=false&ranking=1`,\n    getRapidAPIFetchOptionsData(),\n  )\n    .then(response => {\n      if (response.ok) return response.json();\n      throw new Error(`Error` + response.status + response.json);\n    })\n    .then(data => {\n      if (!data.length) {\n        window.dataStore.errorInTheFridge = true;\n        return data;\n      } else {\n        window.dataStore.errorInTheFridge = false;\n        window.dataStore.isMagicFridge = true;\n        return data;\n      }\n    })\n    .catch(err => {\n      window.dataStore.err = err;\n    })\n    .finally(renderApp);\n}\n\nexport function loadDetailedRecipesInfo({ results }, whereToLoad) {\n  const urlsOfDetailedRecipes = results.map(result => getUrlOfDetailedRecipe(result.id));\n  let requests = urlsOfDetailedRecipes.map(url => fetch(url, getRapidAPIFetchOptionsData()));\n  return Promise.all(requests)\n    .then(responses => Promise.all(responses.map(r => r.json())))\n    .then(data => {\n      if (!data.length) {\n        throw new Error('Please enter valid ingredient.');\n      }\n      window.dataStore[whereToLoad] = data;\n    })\n    .catch(error => {\n      window.dataStore.error = 'Error inside loadDetailedRecipesInfo';\n    })\n    .finally(renderApp);\n}\n\nexport function validateAndLoadData() {\n  const { searchedRecipe } = window.dataStore;\n  const url = getSearchRecipeUrl(searchedRecipe);\n\n  if (!isCurrentRecipeInCache()) {\n    return fetch(url, getRapidAPIFetchOptionsData())\n      .then(response => {\n        if (response.ok) return response.json();\n        throw new Error(`Error` + response.status + response.json);\n      })\n      .then(data => ({ data }));\n  }\n  return Promise.resolve({});\n}\n\nexport function performSearchRecipes(recipeName) {\n  window.dataStore.searchedRecipe = recipeName;\n  window.dataStore.error = null;\n  window.dataStore.isDataLoading = true;\n  renderApp();\n  validateAndLoadData()\n    .then(({ error, data }) => {\n      // console.log('works');\n      window.dataStore.isDataLoading = false;\n      if (error) {\n        window.dataStore.error = error;\n      } else if (data) {\n        if (!data.results.length) {\n          throw new Error('wrong input');\n        }\n        window.dataStore.recipesInCache[recipeName] = data;\n        loadDetailedRecipesInfo(data, 'detailedSearchedRecipes');\n      } else {\n        loadDetailedRecipesInfo(\n          window.dataStore.recipesInCache[recipeName],\n          'detailedSearchedRecipes',\n        );\n      }\n    })\n    .catch(err => {\n      window.dataStore.error = `Ooops.. ${err}`;\n    })\n    .finally(renderApp);\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nexport default function GoalSwitch({ currentGoal, setCurrentGoal }) {\n  return (\n    <>\n      {[\n        { id: 'goalGain', goal: 'gain' },\n        { id: 'goalLose', goal: 'lose' },\n      ].map(({ goal, id }) => (\n        <>\n          <input\n            id={id}\n            type=\"radio\"\n            value={goal}\n            checked={currentGoal === goal}\n            onChange={event => setCurrentGoal(event.target.value)}\n          />\n          <label For={id}>{goal}</label>\n        </>\n      ))}\n    </>\n  );\n}\n","export { default } from './GoalSwitch';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { getDailyMealPlan } from '../../data/spoonacularAPI';\nimport renderApp from '../../framework/render';\nimport {\n  getMealPlanByGoalHeader,\n  getMealPlanByGoalHeader_h2,\n  getMealPlanByGoalHeader_p,\n} from './SetGoal.css';\nimport GoalSwitch from '../GoalSwitch';\n\nfunction setCurrentGoal(value) {\n  window.dataStore.currentGoal = value;\n  renderApp();\n}\n\nfunction handleWeightChange({ target }) {\n  window.dataStore.usersWeight = target.value;\n  renderApp();\n}\n\nexport default function SetGoal() {\n  const { currentGoal, usersWeight } = window.dataStore;\n  return (\n    <div class={getMealPlanByGoalHeader}>\n      <h2 class={getMealPlanByGoalHeader_h2}>Do you want to lose or to gain weight?</h2>\n      <GoalSwitch currentGoal={currentGoal} setCurrentGoal={setCurrentGoal} />\n      <p class={getMealPlanByGoalHeader_p}>\n        In case you want to lose weight, we're going to create a meal plan with a decreased amount\n        of carbs.\n      </p>\n      <p class={getMealPlanByGoalHeader_p}>\n        If your goal is to gain muscles - we're going to include more high protein dishes.\n      </p>\n      <h4>What's your weight?</h4>\n      <input\n        type=\"number\"\n        value={usersWeight}\n        placeholder=\"your weight\"\n        onChange={handleWeightChange}\n      />\n      <button onClick={getDailyMealPlan}>Submit</button>\n    </div>\n  );\n}\n","export { default } from './SetGoal';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport renderApp from '../../framework/render';\nimport {\n  modalRecipeContainer,\n  modalRecipeContainerInner,\n  modalRecipeContainer_image,\n  modalRecipeContainer_nutrientsContainer,\n  recipeCard_nutrientInfoLine,\n  modalRecipeContainer_instructions,\n} from './ModalRecipe.css';\nimport { getNutrientAmount } from '../../utils';\n\nexport function getModalRecipeData(targetId) {\n  const {\n    detailedMealPlanRecipes,\n    detailedSearchedRecipes,\n    detailedMagicFridgeRecipes,\n  } = window.dataStore;\n  let modalRecipeData = '';\n  if (detailedMealPlanRecipes.find(({ id }) => id == targetId)) {\n    return detailedMealPlanRecipes.find(({ id }) => id == targetId);\n  } else if (detailedSearchedRecipes.find(({ id }) => id == targetId)) {\n    return detailedSearchedRecipes.find(({ id }) => id == targetId);\n  } else if (detailedMagicFridgeRecipes.find(({ id }) => id == targetId)) {\n    return detailedMagicFridgeRecipes.find(({ id }) => id == targetId);\n  }\n  return modalRecipeData;\n}\n\nexport function openModalRecipe(targetId) {\n  const modalRecipeData = getModalRecipeData(targetId);\n  window.dataStore.modalRecipeData = modalRecipeData;\n  // window.dataStore.modalRecipeId += `<button onclick=\"window.dataStore.isModalRecipeOpened = false; window.renderApp();\">Close Modal</button>`;\n  window.dataStore.isModalRecipeOpened = true;\n  renderApp();\n}\n\nexport function closeModalRecipe() {\n  window.dataStore.isModalRecipeOpened = false;\n  renderApp();\n}\n\nexport function getPreparedModalRecipeData({\n  id,\n  image,\n  instructions,\n  nutrition: { nutrients },\n  readyInMinutes,\n  title,\n}) {\n  const caloriesAmount = getNutrientAmount('Calories', nutrients);\n  const fatAmount = getNutrientAmount('Fat', nutrients);\n  const carbohydratesAmount = getNutrientAmount('Carbohydrates', nutrients);\n  const proteinAmount = getNutrientAmount('Protein', nutrients);\n  return {\n    id,\n    image,\n    instructions,\n    readyInMinutes,\n    title,\n    caloriesAmount,\n    fatAmount,\n    carbohydratesAmount,\n    proteinAmount,\n  };\n}\n\nexport function CreateModalRecipeWindow({\n  id,\n  image,\n  instructions,\n  readyInMinutes,\n  title,\n  caloriesAmount,\n  fatAmount,\n  carbohydratesAmount,\n  proteinAmount,\n}) {\n  return (\n    <div class={modalRecipeContainer}>\n      <div class={modalRecipeContainerInner}>\n        <h1>{title}</h1>\n        <div class={modalRecipeContainer_image}>\n          <img src={image} alt={title} />\n        </div>\n        <div class={modalRecipeContainer_nutrientsContainer}>\n          <div class={recipeCard_nutrientInfoLine}>\n            <p>Calories:</p>\n            <p>{caloriesAmount}</p>\n          </div>\n          <div class={recipeCard_nutrientInfoLine}>\n            <p>Protein:</p>\n            <p>{proteinAmount}</p>\n          </div>\n          <div class={recipeCard_nutrientInfoLine}>\n            <p>Fat:</p>\n            <p>{fatAmount}</p>\n          </div>\n          <div class={recipeCard_nutrientInfoLine}>\n            <p>Carbohydrates:</p>\n            <p>{carbohydratesAmount}</p>\n          </div>\n        </div>\n        <p class={modalRecipeContainer_instructions}>{instructions}</p>\n        <p>Ready in: {readyInMinutes} minutes.</p>\n        <button onClick={closeModalRecipe}>Close Modal</button>\n      </div>\n    </div>\n  );\n}\n\nexport function ModalRecipe() {\n  const preparedModalRecipeData = getPreparedModalRecipeData(window.dataStore.modalRecipeData);\n  const content = CreateModalRecipeWindow(preparedModalRecipeData);\n  return content;\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { openModalRecipe } from '../ModalRecipe/ModalRecipe';\nimport { recipeCard, recipeCard_image, recipeCard_nutrientInfoLine } from './RecipeCard.css';\nimport { getNutrientAmount } from '../../utils';\n\nexport function getPreparedRecipeCardData({\n  id,\n  title,\n  image,\n  instructions,\n  readyInMinutes,\n  nutrition: { nutrients },\n}) {\n  const caloriesAmount = getNutrientAmount('Calories', nutrients);\n  const fatAmount = getNutrientAmount('Fat', nutrients);\n  const carbohydratesAmount = getNutrientAmount('Carbohydrates', nutrients);\n  const proteinAmount = getNutrientAmount('Protein', nutrients);\n\n  return {\n    id,\n    title,\n    image,\n    instructions,\n    readyInMinutes,\n    nutrients,\n    caloriesAmount,\n    fatAmount,\n    carbohydratesAmount,\n    proteinAmount,\n  };\n}\n\nexport function RecipeCard({\n  id,\n  title,\n  image,\n  instructions,\n  readyInMinutes,\n  nutrients,\n  caloriesAmount,\n  fatAmount,\n  carbohydratesAmount,\n  proteinAmount,\n}) {\n  return (\n    <li class={recipeCard} id={id}>\n      <h4>{title}</h4>\n      <img class={recipeCard_image} src={image} alt={title} />\n      <div class={recipeCard_nutrientInfoLine}>\n        <p>Calories:</p>\n        <p>{caloriesAmount}</p>\n      </div>\n      <div class={recipeCard_nutrientInfoLine}>\n        <p>Protein:</p>\n        <p>{proteinAmount}</p>\n      </div>\n      <div class={recipeCard_nutrientInfoLine}>\n        <p>Fat:</p>\n        <p>{fatAmount}</p>\n      </div>\n      <div class={recipeCard_nutrientInfoLine}>\n        <p>Carbohydrates:</p>\n        <p>{carbohydratesAmount}</p>\n      </div>\n    </li>\n  );\n}\n","export { RecipeCard, getPreparedRecipeCardData } from './RecipeCard';\n","export {\n  getModalRecipeData,\n  openModalRecipe,\n  closeModalRecipe,\n  getPreparedModalRecipeData,\n  CreateModalRecipeWindow,\n  ModalRecipe,\n} from './ModalRecipe';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { recipesContainer, mealDescription, recipeCardsContainer } from './DailyMealPlan.css';\nimport { getPreparedRecipeCardData, RecipeCard } from '../RecipeCard';\nimport { openModalRecipe } from '../ModalRecipe';\n\nfunction clickOnRecipeContainerCB({ target }) {\n  let card = target.closest('li');\n  if (!card) return;\n  openModalRecipe(card.id);\n}\n\nexport default function DailyMealPlan() {\n  const { dailyMealPlan, detailedMealPlanRecipes } = window.dataStore;\n  let content = null;\n  let contentDescription = null;\n  if (dailyMealPlan) {\n    const {\n      meals,\n      nutrients: { calories, protein, fat, carbohydrates },\n    } = dailyMealPlan;\n    contentDescription = (\n      <>\n        <h3>Meal Description</h3>\n        <div>\n          <p>Here is your daily meal plan: breakfast, lunch and dinner.</p>\n          <p>Enjoy it!</p>\n          <p>Calories: ${calories}</p>\n          <p>Protein: ${protein}</p>\n          <p>Fat: ${fat}</p>\n          <p>Carbohydrates: ${carbohydrates}</p>\n        </div>\n      </>\n    );\n  }\n\n  if (detailedMealPlanRecipes.length) {\n    const recipeCards = window.dataStore.detailedMealPlanRecipes.map(detailedRecipeCardData => {\n      const preparedRecipeCardData = getPreparedRecipeCardData(detailedRecipeCardData);\n      return RecipeCard(preparedRecipeCardData);\n    });\n    content = recipeCards;\n  }\n\n  return (\n    <div class={recipesContainer}>\n      <div class={mealDescription}>{contentDescription}</div>\n      <ul class={recipeCardsContainer} onClick={event => clickOnRecipeContainerCB(event)}>\n        {content}\n      </ul>\n    </div>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../../framework/element';\nimport { getMealPlanByGoal } from './getMealPlanByGoal.css';\nimport SetGoal from '../SetGoal';\nimport DailyMealPlan from '../DailyMealPlan/DailyMealPlan';\n\nexport default function GetMealPlanByGoal() {\n  return (\n    <div class={getMealPlanByGoal}>\n      <SetGoal />\n      <DailyMealPlan />\n    </div>\n  );\n}\n","export { default } from './GetMealPlanByGoal';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport renderApp from '../../framework/render';\nimport styles from './AddFridgeIngredients.css';\n\nfunction FillFridgeOnChangeCB(value) {\n  const { magicFridgeItems } = window.dataStore;\n\n  if (magicFridgeItems.length < 5) {\n    magicFridgeItems.push(value);\n    value = '';\n    renderApp();\n  } else {\n    alert('5 ingredients are maximum');\n  }\n}\n\nexport default function AddFridgeIngredients() {\n  return (\n    <>\n      <h2>What's in your fridge?</h2>\n      <p class={styles.getRecipeByIngredientsHeader_p}>\n        Enter up to 5 products you have in the fridge to cook the best meal. Example: apple, milk,\n        sugar.\n      </p>\n      <input\n        type=\"text\"\n        placeholder=\"what is in your fridge?\"\n        onChange={e => FillFridgeOnChangeCB(e.target.value)}\n      />\n      <button type=\"submit\">+add</button>\n    </>\n  );\n}\n","export { default } from './AddFridgeIngredients';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../../framework/element';\nimport renderApp from '../../framework/render';\nimport {\n  fridgeItemContainer,\n  fridgeItemContainer_button,\n  fridgeItemContainer_label,\n} from './FridgeItem.css';\n\nexport function FridgeItem(fridgeItemData) {\n  return (\n    <li class={fridgeItemContainer} id={fridgeItemData}>\n      <button class={fridgeItemContainer_button}>{'x'}</button>\n      <label class={fridgeItemContainer_label} For={fridgeItemData}>\n        {fridgeItemData}\n      </label>\n    </li>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport {\n  fridgeIngredientsListContainer_magicButton,\n  fridgeIngredientsListContainer,\n  fridgeIngredientsListContainer_inner,\n} from './FridgeIngredients.css';\nimport { FridgeItem } from '../FridgeItem/FridgeItem';\nimport { loadMagicFridgeRecipes, loadDetailedRecipesInfo } from '../../data/spoonacularAPI';\nimport renderApp from '../../framework/render';\n\nfunction removeFridgeItem({ target }) {\n  const item = target.closest('li');\n  const id = item.id;\n  if (!item) return;\n  window.dataStore.magicFridgeItems = window.dataStore.magicFridgeItems.filter(item => item !== id);\n  renderApp();\n}\n\nfunction magicButton() {\n  let promise = loadMagicFridgeRecipes();\n  promise.then(data => loadDetailedRecipesInfo({ results: data }, 'detailedMagicFridgeRecipes'));\n}\n\nexport default function FridgeIngredients() {\n  let content = null;\n  let confirmButton = null;\n  if (window.dataStore.magicFridgeItems.length > 0) {\n    confirmButton = (\n      <button class={fridgeIngredientsListContainer_magicButton} onClick={magicButton}>\n        Magic\n      </button>\n    );\n  }\n  content = (\n    <ul onClick={event => removeFridgeItem(event)}>\n      {window.dataStore.magicFridgeItems.map(fridgeItemData => FridgeItem(fridgeItemData))}\n    </ul>\n  );\n  return (\n    <div class={fridgeIngredientsListContainer}>\n      <div class={fridgeIngredientsListContainer_inner}>{content}</div>\n      {confirmButton}\n    </div>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { getRecipeByIngredientsHeader } from './FillFridge.css';\nimport AddFridgeIngredients from '../AddFridgeIngredients';\nimport FridgeIngredients from '../FridgeIngredients/FridgeIngredients';\n\nexport default function FillFridge() {\n  return (\n    <div class={getRecipeByIngredientsHeader}>\n      <AddFridgeIngredients />\n      <FridgeIngredients />\n    </div>\n  );\n}\n","export { default } from './FillFridge';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { mealDescription, recipeCardsContainer } from './FridgeRecipes.css';\nimport { getPreparedRecipeCardData, RecipeCard } from '../RecipeCard/RecipeCard';\nimport { openModalRecipe } from '../ModalRecipe';\n\nfunction findElementAndOpenModal({ target }) {\n  let card = target.closest('li');\n  if (!card) return;\n  openModalRecipe(card.id);\n}\n\nexport default function FridgeRecipes() {\n  const { isMagicFridge, detailedMagicFridgeRecipes, errorInTheFridge } = window.dataStore;\n  let content = '';\n  let contentDescription = '';\n  if (errorInTheFridge) {\n    contentDescription = <div>Please add at least one valid ingredient.</div>;\n    return <div>{contentDescription}</div>;\n  }\n  if (isMagicFridge) {\n    contentDescription = (\n      <>\n        <h3>Here we go!</h3>\n        <p>\n          We have tried to select the best fitting recipes based on your fridge ingredients. Some\n          ingredients may be missing so your imagination can help you how to change them and cook\n          the best meal ever!\n        </p>\n      </>\n    );\n  }\n  if (detailedMagicFridgeRecipes.length) {\n    const recipeCards = window.dataStore.detailedMagicFridgeRecipes.map(detailedRecipeCardData => {\n      const preparedRecipeCardData = getPreparedRecipeCardData(detailedRecipeCardData);\n      return RecipeCard(preparedRecipeCardData);\n    });\n    content = recipeCards;\n  }\n  return (\n    <div>\n      <div class={mealDescription}>{contentDescription}</div>\n      <ul class={recipeCardsContainer} onClick={event => findElementAndOpenModal(event)}>\n        {content}\n      </ul>\n    </div>\n  );\n}\n","export { default } from './FridgeRecipes';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../../framework/element';\nimport { getRecipeByIngredientsContainer } from './GetRecipeByIngredients.css';\nimport FillFridge from '../FillFridge';\nimport FridgeRecipes from '../FridgeRecipes';\n\nexport default function GetRecipeByIngredients() {\n  return (\n    <div class={getRecipeByIngredientsContainer}>\n      <FillFridge />\n      <FridgeRecipes />\n    </div>\n  );\n}\n","export { default } from './GetRecipeByIngredients';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { performSearchRecipes } from '../../data/spoonacularAPI';\nimport { searchForRecipeByNameContainer_header } from './SearchRecipes.css';\n\nexport default function SearchRecipes() {\n  const { searchedRecipe } = window.dataStore;\n  return (\n    <div class={searchForRecipeByNameContainer_header}>\n      <h2>Search by recipe name</h2>\n      <input\n        type=\"text\"\n        value={searchedRecipe}\n        placeholder=\"enter recipe (ex: rice)\"\n        onchange={event => performSearchRecipes(event.target.value)}\n      />\n    </div>\n  );\n}\n","export { default } from './SearchRecipes';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { RecipeCard, getPreparedRecipeCardData } from '../RecipeCard';\nimport { openModalRecipe } from '../ModalRecipe';\nimport { isCurrentRecipeInCache } from '../../utils';\nimport { recipeCardsContainer } from './SearchByNameRecipes.css';\n\nfunction clickOnRecipeContainerCB({ target }) {\n  let card = target.closest('li');\n  if (!card) return;\n  openModalRecipe(card.id);\n}\n\nexport default function SearchByNameRecipes() {\n  const {\n    searchedRecipe,\n    isDataLoading,\n    error,\n    detailedSearchedRecipes,\n    recipesInCache,\n  } = window.dataStore;\n  let content = '';\n\n  //initial state\n  if (searchedRecipe === '') {\n    content = <p>Please enter recipe name.</p>;\n  } else {\n    //loading state\n    if (isDataLoading) {\n      content = <p>Loading...</p>;\n    }\n    //error state\n    if (error) {\n      content = error;\n    }\n    //results state\n    if (isCurrentRecipeInCache()) {\n      const recipeCards = window.dataStore.detailedSearchedRecipes.map(detailedRecipeCardData => {\n        const preparedRecipeCardData = getPreparedRecipeCardData(detailedRecipeCardData);\n        return RecipeCard(preparedRecipeCardData);\n      });\n      content = recipeCards;\n    }\n  }\n  return (\n    <ul class={recipeCardsContainer} onClick={event => clickOnRecipeContainerCB(event)}>\n      {content}\n    </ul>\n  );\n}\n","export { default } from './SearchByNameRecipes';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../../framework/element';\nimport { searchForRecipeByNameContainer } from './SearchForRecipesByName.css';\nimport SearchRecipes from '../SearchRecipes';\nimport SearchByNameRecipes from '../SearchByNameRecipes';\n\nexport default function SearchForRecipesByName() {\n  return (\n    <div class={searchForRecipeByNameContainer}>\n      <SearchRecipes />\n      <SearchByNameRecipes />\n    </div>\n  );\n}\n","export { default } from './SearchForRecipesByName';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../../framework/element';\nimport GetMealPlanByGoal from '../GetMealPlanByGoal';\nimport GetRecipeByIngredients from '../GetRecipeByIngredients';\nimport SearchForRecipesByName from '../SearchForRecipesByName';\nimport { ModalRecipe } from '../ModalRecipe';\nimport { appContainer, header } from './App.css';\n\nexport default function App() {\n  return (\n    <div class={appContainer}>\n      <header class={header}>\n        <h1>YummySpoon</h1>\n      </header>\n      <GetMealPlanByGoal />\n      <GetRecipeByIngredients />\n      <SearchForRecipesByName />\n      {window.dataStore.isModalRecipeOpened ? <ModalRecipe /> : null}\n    </div>\n  );\n}\n","export { default } from './App';\n","// Start from here\nimport dataStore from './data/dataStore';\nimport renderApp from './framework/render';\nimport App from './components/App';\n\nwindow.dataStore = dataStore;\n\nif (module.hot) {\n  module.hot.accept();\n}\n\nrenderApp(App, document.getElementById('app-root'));\n"]}